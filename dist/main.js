(()=>{"use strict";var t={509:(t,r,e)=>{var n=e(9985),o=e(3691),i=TypeError;t.exports=function(t){if(n(t))return t;throw new i(o(t)+" is not a function")}},5027:(t,r,e)=>{var n=e(8999),o=String,i=TypeError;t.exports=function(t){if(n(t))return t;throw new i(o(t)+" is not an object")}},4328:(t,r,e)=>{var n=e(5290),o=e(7578),i=e(6310),a=function(t){return function(r,e,a){var u,c=n(r),s=i(c),f=o(a,s);if(t&&e!=e){for(;s>f;)if((u=c[f++])!=u)return!0}else for(;s>f;f++)if((t||f in c)&&c[f]===e)return t||f||0;return!t&&-1}};t.exports={includes:a(!0),indexOf:a(!1)}},6004:(t,r,e)=>{var n=e(8844);t.exports=n([].slice)},6648:(t,r,e)=>{var n=e(8844),o=n({}.toString),i=n("".slice);t.exports=function(t){return i(o(t),8,-1)}},926:(t,r,e)=>{var n=e(3043),o=e(9985),i=e(6648),a=e(4201)("toStringTag"),u=Object,c="Arguments"===i(function(){return arguments}());t.exports=n?i:function(t){var r,e,n;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(e=function(t,r){try{return t[r]}catch(t){}}(r=u(t),a))?e:c?i(r):"Object"===(n=i(r))&&o(r.callee)?"Arguments":n}},8758:(t,r,e)=>{var n=e(6812),o=e(9152),i=e(2474),a=e(2560);t.exports=function(t,r,e){for(var u=o(r),c=a.f,s=i.f,f=0;f<u.length;f++){var p=u[f];n(t,p)||e&&n(e,p)||c(t,p,s(r,p))}}},5773:(t,r,e)=>{var n=e(7697),o=e(2560),i=e(5684);t.exports=n?function(t,r,e){return o.f(t,r,i(1,e))}:function(t,r,e){return t[r]=e,t}},5684:t=>{t.exports=function(t,r){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:r}}},1880:(t,r,e)=>{var n=e(9985),o=e(2560),i=e(8702),a=e(5014);t.exports=function(t,r,e,u){u||(u={});var c=u.enumerable,s=void 0!==u.name?u.name:r;if(n(e)&&i(e,s,u),u.global)c?t[r]=e:a(r,e);else{try{u.unsafe?t[r]&&(c=!0):delete t[r]}catch(t){}c?t[r]=e:o.f(t,r,{value:e,enumerable:!1,configurable:!u.nonConfigurable,writable:!u.nonWritable})}return t}},5014:(t,r,e)=>{var n=e(9037),o=Object.defineProperty;t.exports=function(t,r){try{o(n,t,{value:r,configurable:!0,writable:!0})}catch(e){n[t]=r}return r}},7697:(t,r,e)=>{var n=e(3689);t.exports=!n((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},6420:(t,r,e)=>{var n=e(9037),o=e(8999),i=n.document,a=o(i)&&o(i.createElement);t.exports=function(t){return a?i.createElement(t):{}}},3127:t=>{t.exports="function"==typeof Bun&&Bun&&"string"==typeof Bun.version},71:t=>{t.exports="undefined"!=typeof navigator&&String(navigator.userAgent)||""},3615:(t,r,e)=>{var n,o,i=e(9037),a=e(71),u=i.process,c=i.Deno,s=u&&u.versions||c&&c.version,f=s&&s.v8;f&&(o=(n=f.split("."))[0]>0&&n[0]<4?1:+(n[0]+n[1])),!o&&a&&(!(n=a.match(/Edge\/(\d+)/))||n[1]>=74)&&(n=a.match(/Chrome\/(\d+)/))&&(o=+n[1]),t.exports=o},2739:t=>{t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},9989:(t,r,e)=>{var n=e(9037),o=e(2474).f,i=e(5773),a=e(1880),u=e(5014),c=e(8758),s=e(5266);t.exports=function(t,r){var e,f,p,l,v,g=t.target,y=t.global,b=t.stat;if(e=y?n:b?n[g]||u(g,{}):n[g]&&n[g].prototype)for(f in r){if(l=r[f],p=t.dontCallGetSet?(v=o(e,f))&&v.value:e[f],!s(y?f:g+(b?".":"#")+f,t.forced)&&void 0!==p){if(typeof l==typeof p)continue;c(l,p)}(t.sham||p&&p.sham)&&i(l,"sham",!0),a(e,f,l,t)}}},3689:t=>{t.exports=function(t){try{return!!t()}catch(t){return!0}}},1735:(t,r,e)=>{var n=e(7215),o=Function.prototype,i=o.apply,a=o.call;t.exports="object"==typeof Reflect&&Reflect.apply||(n?a.bind(i):function(){return a.apply(i,arguments)})},7215:(t,r,e)=>{var n=e(3689);t.exports=!n((function(){var t=function(){}.bind();return"function"!=typeof t||t.hasOwnProperty("prototype")}))},2615:(t,r,e)=>{var n=e(7215),o=Function.prototype.call;t.exports=n?o.bind(o):function(){return o.apply(o,arguments)}},1236:(t,r,e)=>{var n=e(7697),o=e(6812),i=Function.prototype,a=n&&Object.getOwnPropertyDescriptor,u=o(i,"name"),c=u&&"something"===function(){}.name,s=u&&(!n||n&&a(i,"name").configurable);t.exports={EXISTS:u,PROPER:c,CONFIGURABLE:s}},8844:(t,r,e)=>{var n=e(7215),o=Function.prototype,i=o.call,a=n&&o.bind.bind(i,i);t.exports=n?a:function(t){return function(){return i.apply(t,arguments)}}},6058:(t,r,e)=>{var n=e(9037),o=e(9985);t.exports=function(t,r){return arguments.length<2?(e=n[t],o(e)?e:void 0):n[t]&&n[t][r];var e}},4849:(t,r,e)=>{var n=e(509),o=e(981);t.exports=function(t,r){var e=t[r];return o(e)?void 0:n(e)}},9037:function(t,r,e){var n=function(t){return t&&t.Math===Math&&t};t.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof e.g&&e.g)||n("object"==typeof this&&this)||function(){return this}()||Function("return this")()},6812:(t,r,e)=>{var n=e(8844),o=e(690),i=n({}.hasOwnProperty);t.exports=Object.hasOwn||function(t,r){return i(o(t),r)}},7248:t=>{t.exports={}},8506:(t,r,e)=>{var n=e(7697),o=e(3689),i=e(6420);t.exports=!n&&!o((function(){return 7!==Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},4413:(t,r,e)=>{var n=e(8844),o=e(3689),i=e(6648),a=Object,u=n("".split);t.exports=o((function(){return!a("z").propertyIsEnumerable(0)}))?function(t){return"String"===i(t)?u(t,""):a(t)}:a},6738:(t,r,e)=>{var n=e(8844),o=e(9985),i=e(4091),a=n(Function.toString);o(i.inspectSource)||(i.inspectSource=function(t){return a(t)}),t.exports=i.inspectSource},618:(t,r,e)=>{var n,o,i,a=e(9834),u=e(9037),c=e(8999),s=e(5773),f=e(6812),p=e(4091),l=e(2713),v=e(7248),g="Object already initialized",y=u.TypeError,b=u.WeakMap;if(a||p.state){var h=p.state||(p.state=new b);h.get=h.get,h.has=h.has,h.set=h.set,n=function(t,r){if(h.has(t))throw new y(g);return r.facade=t,h.set(t,r),r},o=function(t){return h.get(t)||{}},i=function(t){return h.has(t)}}else{var m=l("state");v[m]=!0,n=function(t,r){if(f(t,m))throw new y(g);return r.facade=t,s(t,m,r),r},o=function(t){return f(t,m)?t[m]:{}},i=function(t){return f(t,m)}}t.exports={set:n,get:o,has:i,enforce:function(t){return i(t)?o(t):n(t,{})},getterFor:function(t){return function(r){var e;if(!c(r)||(e=o(r)).type!==t)throw new y("Incompatible receiver, "+t+" required");return e}}}},9985:t=>{var r="object"==typeof document&&document.all;t.exports=void 0===r&&void 0!==r?function(t){return"function"==typeof t||t===r}:function(t){return"function"==typeof t}},5266:(t,r,e)=>{var n=e(3689),o=e(9985),i=/#|\.prototype\./,a=function(t,r){var e=c[u(t)];return e===f||e!==s&&(o(r)?n(r):!!r)},u=a.normalize=function(t){return String(t).replace(i,".").toLowerCase()},c=a.data={},s=a.NATIVE="N",f=a.POLYFILL="P";t.exports=a},981:t=>{t.exports=function(t){return null==t}},8999:(t,r,e)=>{var n=e(9985);t.exports=function(t){return"object"==typeof t?null!==t:n(t)}},3931:t=>{t.exports=!1},734:(t,r,e)=>{var n=e(6058),o=e(9985),i=e(3622),a=e(9525),u=Object;t.exports=a?function(t){return"symbol"==typeof t}:function(t){var r=n("Symbol");return o(r)&&i(r.prototype,u(t))}},6310:(t,r,e)=>{var n=e(3126);t.exports=function(t){return n(t.length)}},8702:(t,r,e)=>{var n=e(8844),o=e(3689),i=e(9985),a=e(6812),u=e(7697),c=e(1236).CONFIGURABLE,s=e(6738),f=e(618),p=f.enforce,l=f.get,v=String,g=Object.defineProperty,y=n("".slice),b=n("".replace),h=n([].join),m=u&&!o((function(){return 8!==g((function(){}),"length",{value:8}).length})),d=String(String).split("String"),x=t.exports=function(t,r,e){"Symbol("===y(v(r),0,7)&&(r="["+b(v(r),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),e&&e.getter&&(r="get "+r),e&&e.setter&&(r="set "+r),(!a(t,"name")||c&&t.name!==r)&&(u?g(t,"name",{value:r,configurable:!0}):t.name=r),m&&e&&a(e,"arity")&&t.length!==e.arity&&g(t,"length",{value:e.arity});try{e&&a(e,"constructor")&&e.constructor?u&&g(t,"prototype",{writable:!1}):t.prototype&&(t.prototype=void 0)}catch(t){}var n=p(t);return a(n,"source")||(n.source=h(d,"string"==typeof r?r:"")),t};Function.prototype.toString=x((function(){return i(this)&&l(this).source||s(this)}),"toString")},8828:t=>{var r=Math.ceil,e=Math.floor;t.exports=Math.trunc||function(t){var n=+t;return(n>0?e:r)(n)}},2560:(t,r,e)=>{var n=e(7697),o=e(8506),i=e(5648),a=e(5027),u=e(8360),c=TypeError,s=Object.defineProperty,f=Object.getOwnPropertyDescriptor,p="enumerable",l="configurable",v="writable";r.f=n?i?function(t,r,e){if(a(t),r=u(r),a(e),"function"==typeof t&&"prototype"===r&&"value"in e&&v in e&&!e[v]){var n=f(t,r);n&&n[v]&&(t[r]=e.value,e={configurable:l in e?e[l]:n[l],enumerable:p in e?e[p]:n[p],writable:!1})}return s(t,r,e)}:s:function(t,r,e){if(a(t),r=u(r),a(e),o)try{return s(t,r,e)}catch(t){}if("get"in e||"set"in e)throw new c("Accessors not supported");return"value"in e&&(t[r]=e.value),t}},2474:(t,r,e)=>{var n=e(7697),o=e(2615),i=e(9556),a=e(5684),u=e(5290),c=e(8360),s=e(6812),f=e(8506),p=Object.getOwnPropertyDescriptor;r.f=n?p:function(t,r){if(t=u(t),r=c(r),f)try{return p(t,r)}catch(t){}if(s(t,r))return a(!o(i.f,t,r),t[r])}},2741:(t,r,e)=>{var n=e(4948),o=e(2739).concat("length","prototype");r.f=Object.getOwnPropertyNames||function(t){return n(t,o)}},7518:(t,r)=>{r.f=Object.getOwnPropertySymbols},3622:(t,r,e)=>{var n=e(8844);t.exports=n({}.isPrototypeOf)},4948:(t,r,e)=>{var n=e(8844),o=e(6812),i=e(5290),a=e(4328).indexOf,u=e(7248),c=n([].push);t.exports=function(t,r){var e,n=i(t),s=0,f=[];for(e in n)!o(u,e)&&o(n,e)&&c(f,e);for(;r.length>s;)o(n,e=r[s++])&&(~a(f,e)||c(f,e));return f}},9556:(t,r)=>{var e={}.propertyIsEnumerable,n=Object.getOwnPropertyDescriptor,o=n&&!e.call({1:2},1);r.f=o?function(t){var r=n(this,t);return!!r&&r.enumerable}:e},5073:(t,r,e)=>{var n=e(3043),o=e(926);t.exports=n?{}.toString:function(){return"[object "+o(this)+"]"}},5899:(t,r,e)=>{var n=e(2615),o=e(9985),i=e(8999),a=TypeError;t.exports=function(t,r){var e,u;if("string"===r&&o(e=t.toString)&&!i(u=n(e,t)))return u;if(o(e=t.valueOf)&&!i(u=n(e,t)))return u;if("string"!==r&&o(e=t.toString)&&!i(u=n(e,t)))return u;throw new a("Can't convert object to primitive value")}},9152:(t,r,e)=>{var n=e(6058),o=e(8844),i=e(2741),a=e(7518),u=e(5027),c=o([].concat);t.exports=n("Reflect","ownKeys")||function(t){var r=i.f(u(t)),e=a.f;return e?c(r,e(t)):r}},9633:(t,r,e)=>{var n=e(5027);t.exports=function(){var t=n(this),r="";return t.hasIndices&&(r+="d"),t.global&&(r+="g"),t.ignoreCase&&(r+="i"),t.multiline&&(r+="m"),t.dotAll&&(r+="s"),t.unicode&&(r+="u"),t.unicodeSets&&(r+="v"),t.sticky&&(r+="y"),r}},3477:(t,r,e)=>{var n=e(2615),o=e(6812),i=e(3622),a=e(9633),u=RegExp.prototype;t.exports=function(t){var r=t.flags;return void 0!==r||"flags"in u||o(t,"flags")||!i(u,t)?r:n(a,t)}},4684:(t,r,e)=>{var n=e(981),o=TypeError;t.exports=function(t){if(n(t))throw new o("Can't call method on "+t);return t}},8552:(t,r,e)=>{var n,o=e(9037),i=e(1735),a=e(9985),u=e(3127),c=e(71),s=e(6004),f=e(1500),p=o.Function,l=/MSIE .\./.test(c)||u&&((n=o.Bun.version.split(".")).length<3||"0"===n[0]&&(n[1]<3||"3"===n[1]&&"0"===n[2]));t.exports=function(t,r){var e=r?2:1;return l?function(n,o){var u=f(arguments.length,1)>e,c=a(n)?n:p(n),l=u?s(arguments,e):[],v=u?function(){i(c,this,l)}:c;return r?t(v,o):t(v)}:t}},2713:(t,r,e)=>{var n=e(3430),o=e(4630),i=n("keys");t.exports=function(t){return i[t]||(i[t]=o(t))}},4091:(t,r,e)=>{var n=e(9037),o=e(5014),i="__core-js_shared__",a=n[i]||o(i,{});t.exports=a},3430:(t,r,e)=>{var n=e(3931),o=e(4091);(t.exports=function(t,r){return o[t]||(o[t]=void 0!==r?r:{})})("versions",[]).push({version:"3.35.1",mode:n?"pure":"global",copyright:"© 2014-2024 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.35.1/LICENSE",source:"https://github.com/zloirock/core-js"})},146:(t,r,e)=>{var n=e(3615),o=e(3689),i=e(9037).String;t.exports=!!Object.getOwnPropertySymbols&&!o((function(){var t=Symbol("symbol detection");return!i(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&n&&n<41}))},7578:(t,r,e)=>{var n=e(8700),o=Math.max,i=Math.min;t.exports=function(t,r){var e=n(t);return e<0?o(e+r,0):i(e,r)}},5290:(t,r,e)=>{var n=e(4413),o=e(4684);t.exports=function(t){return n(o(t))}},8700:(t,r,e)=>{var n=e(8828);t.exports=function(t){var r=+t;return r!=r||0===r?0:n(r)}},3126:(t,r,e)=>{var n=e(8700),o=Math.min;t.exports=function(t){var r=n(t);return r>0?o(r,9007199254740991):0}},690:(t,r,e)=>{var n=e(4684),o=Object;t.exports=function(t){return o(n(t))}},8732:(t,r,e)=>{var n=e(2615),o=e(8999),i=e(734),a=e(4849),u=e(5899),c=e(4201),s=TypeError,f=c("toPrimitive");t.exports=function(t,r){if(!o(t)||i(t))return t;var e,c=a(t,f);if(c){if(void 0===r&&(r="default"),e=n(c,t,r),!o(e)||i(e))return e;throw new s("Can't convert object to primitive value")}return void 0===r&&(r="number"),u(t,r)}},8360:(t,r,e)=>{var n=e(8732),o=e(734);t.exports=function(t){var r=n(t,"string");return o(r)?r:r+""}},3043:(t,r,e)=>{var n={};n[e(4201)("toStringTag")]="z",t.exports="[object z]"===String(n)},4327:(t,r,e)=>{var n=e(926),o=String;t.exports=function(t){if("Symbol"===n(t))throw new TypeError("Cannot convert a Symbol value to a string");return o(t)}},3691:t=>{var r=String;t.exports=function(t){try{return r(t)}catch(t){return"Object"}}},4630:(t,r,e)=>{var n=e(8844),o=0,i=Math.random(),a=n(1..toString);t.exports=function(t){return"Symbol("+(void 0===t?"":t)+")_"+a(++o+i,36)}},9525:(t,r,e)=>{var n=e(146);t.exports=n&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},5648:(t,r,e)=>{var n=e(7697),o=e(3689);t.exports=n&&o((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},1500:t=>{var r=TypeError;t.exports=function(t,e){if(t<e)throw new r("Not enough arguments");return t}},9834:(t,r,e)=>{var n=e(9037),o=e(9985),i=n.WeakMap;t.exports=o(i)&&/native code/.test(String(i))},4201:(t,r,e)=>{var n=e(9037),o=e(3430),i=e(6812),a=e(4630),u=e(146),c=e(9525),s=n.Symbol,f=o("wks"),p=c?s.for||s:s&&s.withoutSetter||a;t.exports=function(t){return i(f,t)||(f[t]=u&&i(s,t)?s[t]:p("Symbol."+t)),f[t]}},24:(t,r,e)=>{var n=e(8844),o=e(1880),i=Date.prototype,a="Invalid Date",u="toString",c=n(i[u]),s=n(i.getTime);String(new Date(NaN))!==a&&o(i,u,(function(){var t=s(this);return t==t?c(this):a}))},228:(t,r,e)=>{var n=e(3043),o=e(1880),i=e(5073);n||o(Object.prototype,"toString",i,{unsafe:!0})},2826:(t,r,e)=>{var n=e(1236).PROPER,o=e(1880),i=e(5027),a=e(4327),u=e(3689),c=e(3477),s="toString",f=RegExp.prototype,p=f[s],l=u((function(){return"/a/b"!==p.call({source:"a",flags:"b"})})),v=n&&p.name!==s;(l||v)&&o(f,s,(function(){var t=i(this);return"/"+a(t.source)+"/"+a(c(t))}),{unsafe:!0})},209:(t,r,e)=>{var n=e(9989),o=e(9037),i=e(8552)(o.setInterval,!0);n({global:!0,bind:!0,forced:o.setInterval!==i},{setInterval:i})},3509:(t,r,e)=>{var n=e(9989),o=e(9037),i=e(8552)(o.setTimeout,!0);n({global:!0,bind:!0,forced:o.setTimeout!==i},{setTimeout:i})},6869:(t,r,e)=>{e(209),e(3509)}},r={};function e(n){var o=r[n];if(void 0!==o)return o.exports;var i=r[n]={exports:{}};return t[n].call(i.exports,i,i.exports,e),i.exports}e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var r=e.g.document;if(!t&&r&&(r.currentScript&&(t=r.currentScript.src),!t)){var n=r.getElementsByTagName("script");if(n.length)for(var o=n.length-1;o>-1&&!t;)t=n[o--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})(),(()=>{e(24),e(228),e(2826),e(6869);const t=e.p+"assets/2dbd01ce16c0fa83cb67.png";var r,n=null;function o(t){var r=Math.floor(16*Math.random()).toString();return null===t||t!==r?r:o(r)}function i(){r&&(r.innerHTML="");var e=document.createElement("img");e.src=t,n=o(n),(r=document.getElementById(n)).appendChild(e)}window.onload=function(){!function(){for(var t=0;t<16;t+=1){var r=document.createElement("div");r.id=t.toString(),document.getElementById("game-board").appendChild(r)}setInterval(i,2e3)}()}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QSxHQUFLLEVBQUcsQ0FDOUIsSUFBTXNRLEVBQU9uUCxTQUFTRSxjQUFjLE9BQ3BDaVAsRUFBS3ZELEdBQUsvTSxFQUFFN0IsV0FDWmdELFNBQVNnUCxlQUFlLGNBQWNDLFlBQVlFLEVBQ3BELENBRUE5QixZQUFZdUIsRUFBVyxJQUN6QixDQUdFUSxFQUNGLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2EtY2FsbGFibGUuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9hbi1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9hcnJheS1pbmNsdWRlcy5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2FycmF5LXNsaWNlLmpzIiwid2VicGFjazovL2Foai0yLjEtbW92aW5nX2FuX2VsZW1lbnQvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvY2xhc3NvZi1yYXcuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9jbGFzc29mLmpzIiwid2VicGFjazovL2Foai0yLjEtbW92aW5nX2FuX2VsZW1lbnQvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvY29weS1jb25zdHJ1Y3Rvci1wcm9wZXJ0aWVzLmpzIiwid2VicGFjazovL2Foai0yLjEtbW92aW5nX2FuX2VsZW1lbnQvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvY3JlYXRlLW5vbi1lbnVtZXJhYmxlLXByb3BlcnR5LmpzIiwid2VicGFjazovL2Foai0yLjEtbW92aW5nX2FuX2VsZW1lbnQvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5LWRlc2NyaXB0b3IuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9kZWZpbmUtYnVpbHQtaW4uanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9kZWZpbmUtZ2xvYmFsLXByb3BlcnR5LmpzIiwid2VicGFjazovL2Foai0yLjEtbW92aW5nX2FuX2VsZW1lbnQvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZGVzY3JpcHRvcnMuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9kb2N1bWVudC1jcmVhdGUtZWxlbWVudC5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2VuZ2luZS1pcy1idW4uanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9lbmdpbmUtdXNlci1hZ2VudC5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2VuZ2luZS12OC12ZXJzaW9uLmpzIiwid2VicGFjazovL2Foai0yLjEtbW92aW5nX2FuX2VsZW1lbnQvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZW51bS1idWcta2V5cy5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2V4cG9ydC5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2ZhaWxzLmpzIiwid2VicGFjazovL2Foai0yLjEtbW92aW5nX2FuX2VsZW1lbnQvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZnVuY3Rpb24tYXBwbHkuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9mdW5jdGlvbi1iaW5kLW5hdGl2ZS5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2Z1bmN0aW9uLWNhbGwuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9mdW5jdGlvbi1uYW1lLmpzIiwid2VicGFjazovL2Foai0yLjEtbW92aW5nX2FuX2VsZW1lbnQvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzLmpzIiwid2VicGFjazovL2Foai0yLjEtbW92aW5nX2FuX2VsZW1lbnQvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZ2V0LWJ1aWx0LWluLmpzIiwid2VicGFjazovL2Foai0yLjEtbW92aW5nX2FuX2VsZW1lbnQvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZ2V0LW1ldGhvZC5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2hhcy1vd24tcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9oaWRkZW4ta2V5cy5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2llOC1kb20tZGVmaW5lLmpzIiwid2VicGFjazovL2Foai0yLjEtbW92aW5nX2FuX2VsZW1lbnQvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaW5kZXhlZC1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pbnNwZWN0LXNvdXJjZS5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2ludGVybmFsLXN0YXRlLmpzIiwid2VicGFjazovL2Foai0yLjEtbW92aW5nX2FuX2VsZW1lbnQvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaXMtY2FsbGFibGUuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pcy1mb3JjZWQuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pcy1udWxsLW9yLXVuZGVmaW5lZC5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2lzLW9iamVjdC5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2lzLXB1cmUuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pcy1zeW1ib2wuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9sZW5ndGgtb2YtYXJyYXktbGlrZS5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL21ha2UtYnVpbHQtaW4uanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9tYXRoLXRydW5jLmpzIiwid2VicGFjazovL2Foai0yLjEtbW92aW5nX2FuX2VsZW1lbnQvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1uYW1lcy5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LXN5bWJvbHMuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vYmplY3QtaXMtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovL2Foai0yLjEtbW92aW5nX2FuX2VsZW1lbnQvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LWtleXMtaW50ZXJuYWwuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vYmplY3QtcHJvcGVydHktaXMtZW51bWVyYWJsZS5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL29iamVjdC10by1zdHJpbmcuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vcmRpbmFyeS10by1wcmltaXRpdmUuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vd24ta2V5cy5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3JlZ2V4cC1mbGFncy5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3JlZ2V4cC1nZXQtZmxhZ3MuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGUuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9zY2hlZHVsZXJzLWZpeC5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3NoYXJlZC1rZXkuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9zaGFyZWQtc3RvcmUuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9zaGFyZWQuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9zeW1ib2wtY29uc3RydWN0b3ItZGV0ZWN0aW9uLmpzIiwid2VicGFjazovL2Foai0yLjEtbW92aW5nX2FuX2VsZW1lbnQvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdG8tYWJzb2x1dGUtaW5kZXguanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdC5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3RvLWludGVnZXItb3ItaW5maW5pdHkuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1sZW5ndGguanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1wcmltaXRpdmUuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1wcm9wZXJ0eS1rZXkuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1zdHJpbmctdGFnLXN1cHBvcnQuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1zdHJpbmcuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90cnktdG8tc3RyaW5nLmpzIiwid2VicGFjazovL2Foai0yLjEtbW92aW5nX2FuX2VsZW1lbnQvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdWlkLmpzIiwid2VicGFjazovL2Foai0yLjEtbW92aW5nX2FuX2VsZW1lbnQvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdXNlLXN5bWJvbC1hcy11aWQuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy92OC1wcm90b3R5cGUtZGVmaW5lLWJ1Zy5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3ZhbGlkYXRlLWFyZ3VtZW50cy1sZW5ndGguanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy93ZWFrLW1hcC1iYXNpYy1kZXRlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbC5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5kYXRlLnRvLXN0cmluZy5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIiwid2VicGFjazovL2Foai0yLjEtbW92aW5nX2FuX2VsZW1lbnQvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvd2ViLnNldC1pbnRlcnZhbC5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy93ZWIuc2V0LXRpbWVvdXQuanMiLCJ3ZWJwYWNrOi8vYWhqLTIuMS1tb3ZpbmdfYW5fZWxlbWVudC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvd2ViLnRpbWVycy5qcyIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2Foai0yLjEtbW92aW5nX2FuX2VsZW1lbnQvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9haGotMi4xLW1vdmluZ19hbl9lbGVtZW50L3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL2Foai0yLjEtbW92aW5nX2FuX2VsZW1lbnQvLi9zcmMvanMvYXBwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgdHJ5VG9TdHJpbmcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdHJ5LXRvLXN0cmluZycpO1xuXG52YXIgJFR5cGVFcnJvciA9IFR5cGVFcnJvcjtcblxuLy8gYEFzc2VydDogSXNDYWxsYWJsZShhcmd1bWVudCkgaXMgdHJ1ZWBcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIGlmIChpc0NhbGxhYmxlKGFyZ3VtZW50KSkgcmV0dXJuIGFyZ3VtZW50O1xuICB0aHJvdyBuZXcgJFR5cGVFcnJvcih0cnlUb1N0cmluZyhhcmd1bWVudCkgKyAnIGlzIG5vdCBhIGZ1bmN0aW9uJyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW9iamVjdCcpO1xuXG52YXIgJFN0cmluZyA9IFN0cmluZztcbnZhciAkVHlwZUVycm9yID0gVHlwZUVycm9yO1xuXG4vLyBgQXNzZXJ0OiBUeXBlKGFyZ3VtZW50KSBpcyBPYmplY3RgXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICBpZiAoaXNPYmplY3QoYXJndW1lbnQpKSByZXR1cm4gYXJndW1lbnQ7XG4gIHRocm93IG5ldyAkVHlwZUVycm9yKCRTdHJpbmcoYXJndW1lbnQpICsgJyBpcyBub3QgYW4gb2JqZWN0Jyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHRvSW5kZXhlZE9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdCcpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1hYnNvbHV0ZS1pbmRleCcpO1xudmFyIGxlbmd0aE9mQXJyYXlMaWtlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2xlbmd0aC1vZi1hcnJheS1saWtlJyk7XG5cbi8vIGBBcnJheS5wcm90b3R5cGUueyBpbmRleE9mLCBpbmNsdWRlcyB9YCBtZXRob2RzIGltcGxlbWVudGF0aW9uXG52YXIgY3JlYXRlTWV0aG9kID0gZnVuY3Rpb24gKElTX0lOQ0xVREVTKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoJHRoaXMsIGVsLCBmcm9tSW5kZXgpIHtcbiAgICB2YXIgTyA9IHRvSW5kZXhlZE9iamVjdCgkdGhpcyk7XG4gICAgdmFyIGxlbmd0aCA9IGxlbmd0aE9mQXJyYXlMaWtlKE8pO1xuICAgIHZhciBpbmRleCA9IHRvQWJzb2x1dGVJbmRleChmcm9tSW5kZXgsIGxlbmd0aCk7XG4gICAgdmFyIHZhbHVlO1xuICAgIC8vIEFycmF5I2luY2x1ZGVzIHVzZXMgU2FtZVZhbHVlWmVybyBlcXVhbGl0eSBhbGdvcml0aG1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlIC0tIE5hTiBjaGVja1xuICAgIGlmIChJU19JTkNMVURFUyAmJiBlbCAhPT0gZWwpIHdoaWxlIChsZW5ndGggPiBpbmRleCkge1xuICAgICAgdmFsdWUgPSBPW2luZGV4KytdO1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZSAtLSBOYU4gY2hlY2tcbiAgICAgIGlmICh2YWx1ZSAhPT0gdmFsdWUpIHJldHVybiB0cnVlO1xuICAgIC8vIEFycmF5I2luZGV4T2YgaWdub3JlcyBob2xlcywgQXJyYXkjaW5jbHVkZXMgLSBub3RcbiAgICB9IGVsc2UgZm9yICg7bGVuZ3RoID4gaW5kZXg7IGluZGV4KyspIHtcbiAgICAgIGlmICgoSVNfSU5DTFVERVMgfHwgaW5kZXggaW4gTykgJiYgT1tpbmRleF0gPT09IGVsKSByZXR1cm4gSVNfSU5DTFVERVMgfHwgaW5kZXggfHwgMDtcbiAgICB9IHJldHVybiAhSVNfSU5DTFVERVMgJiYgLTE7XG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLy8gYEFycmF5LnByb3RvdHlwZS5pbmNsdWRlc2AgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLmluY2x1ZGVzXG4gIGluY2x1ZGVzOiBjcmVhdGVNZXRob2QodHJ1ZSksXG4gIC8vIGBBcnJheS5wcm90b3R5cGUuaW5kZXhPZmAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLmluZGV4b2ZcbiAgaW5kZXhPZjogY3JlYXRlTWV0aG9kKGZhbHNlKVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSB1bmN1cnJ5VGhpcyhbXS5zbGljZSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG5cbnZhciB0b1N0cmluZyA9IHVuY3VycnlUaGlzKHt9LnRvU3RyaW5nKTtcbnZhciBzdHJpbmdTbGljZSA9IHVuY3VycnlUaGlzKCcnLnNsaWNlKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHN0cmluZ1NsaWNlKHRvU3RyaW5nKGl0KSwgOCwgLTEpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBUT19TVFJJTkdfVEFHX1NVUFBPUlQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tc3RyaW5nLXRhZy1zdXBwb3J0Jyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xudmFyIGNsYXNzb2ZSYXcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2xhc3NvZi1yYXcnKTtcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcblxudmFyIFRPX1NUUklOR19UQUcgPSB3ZWxsS25vd25TeW1ib2woJ3RvU3RyaW5nVGFnJyk7XG52YXIgJE9iamVjdCA9IE9iamVjdDtcblxuLy8gRVMzIHdyb25nIGhlcmVcbnZhciBDT1JSRUNUX0FSR1VNRU5UUyA9IGNsYXNzb2ZSYXcoZnVuY3Rpb24gKCkgeyByZXR1cm4gYXJndW1lbnRzOyB9KCkpID09PSAnQXJndW1lbnRzJztcblxuLy8gZmFsbGJhY2sgZm9yIElFMTEgU2NyaXB0IEFjY2VzcyBEZW5pZWQgZXJyb3JcbnZhciB0cnlHZXQgPSBmdW5jdGlvbiAoaXQsIGtleSkge1xuICB0cnkge1xuICAgIHJldHVybiBpdFtrZXldO1xuICB9IGNhdGNoIChlcnJvcikgeyAvKiBlbXB0eSAqLyB9XG59O1xuXG4vLyBnZXR0aW5nIHRhZyBmcm9tIEVTNisgYE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmdgXG5tb2R1bGUuZXhwb3J0cyA9IFRPX1NUUklOR19UQUdfU1VQUE9SVCA/IGNsYXNzb2ZSYXcgOiBmdW5jdGlvbiAoaXQpIHtcbiAgdmFyIE8sIHRhZywgcmVzdWx0O1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/ICdVbmRlZmluZWQnIDogaXQgPT09IG51bGwgPyAnTnVsbCdcbiAgICAvLyBAQHRvU3RyaW5nVGFnIGNhc2VcbiAgICA6IHR5cGVvZiAodGFnID0gdHJ5R2V0KE8gPSAkT2JqZWN0KGl0KSwgVE9fU1RSSU5HX1RBRykpID09ICdzdHJpbmcnID8gdGFnXG4gICAgLy8gYnVpbHRpblRhZyBjYXNlXG4gICAgOiBDT1JSRUNUX0FSR1VNRU5UUyA/IGNsYXNzb2ZSYXcoTylcbiAgICAvLyBFUzMgYXJndW1lbnRzIGZhbGxiYWNrXG4gICAgOiAocmVzdWx0ID0gY2xhc3NvZlJhdyhPKSkgPT09ICdPYmplY3QnICYmIGlzQ2FsbGFibGUoTy5jYWxsZWUpID8gJ0FyZ3VtZW50cycgOiByZXN1bHQ7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGhhc093biA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oYXMtb3duLXByb3BlcnR5Jyk7XG52YXIgb3duS2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vd24ta2V5cycpO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvck1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yJyk7XG52YXIgZGVmaW5lUHJvcGVydHlNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSwgZXhjZXB0aW9ucykge1xuICB2YXIga2V5cyA9IG93bktleXMoc291cmNlKTtcbiAgdmFyIGRlZmluZVByb3BlcnR5ID0gZGVmaW5lUHJvcGVydHlNb2R1bGUuZjtcbiAgdmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvck1vZHVsZS5mO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICBpZiAoIWhhc093bih0YXJnZXQsIGtleSkgJiYgIShleGNlcHRpb25zICYmIGhhc093bihleGNlcHRpb25zLCBrZXkpKSkge1xuICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpO1xuICAgIH1cbiAgfVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIGRlZmluZVByb3BlcnR5TW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHknKTtcbnZhciBjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5LWRlc2NyaXB0b3InKTtcblxubW9kdWxlLmV4cG9ydHMgPSBERVNDUklQVE9SUyA/IGZ1bmN0aW9uIChvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgcmV0dXJuIGRlZmluZVByb3BlcnR5TW9kdWxlLmYob2JqZWN0LCBrZXksIGNyZWF0ZVByb3BlcnR5RGVzY3JpcHRvcigxLCB2YWx1ZSkpO1xufSA6IGZ1bmN0aW9uIChvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgb2JqZWN0W2tleV0gPSB2YWx1ZTtcbiAgcmV0dXJuIG9iamVjdDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChiaXRtYXAsIHZhbHVlKSB7XG4gIHJldHVybiB7XG4gICAgZW51bWVyYWJsZTogIShiaXRtYXAgJiAxKSxcbiAgICBjb25maWd1cmFibGU6ICEoYml0bWFwICYgMiksXG4gICAgd3JpdGFibGU6ICEoYml0bWFwICYgNCksXG4gICAgdmFsdWU6IHZhbHVlXG4gIH07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciBkZWZpbmVQcm9wZXJ0eU1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5Jyk7XG52YXIgbWFrZUJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvbWFrZS1idWlsdC1pbicpO1xudmFyIGRlZmluZUdsb2JhbFByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RlZmluZS1nbG9iYWwtcHJvcGVydHknKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTywga2V5LCB2YWx1ZSwgb3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMpIG9wdGlvbnMgPSB7fTtcbiAgdmFyIHNpbXBsZSA9IG9wdGlvbnMuZW51bWVyYWJsZTtcbiAgdmFyIG5hbWUgPSBvcHRpb25zLm5hbWUgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMubmFtZSA6IGtleTtcbiAgaWYgKGlzQ2FsbGFibGUodmFsdWUpKSBtYWtlQnVpbHRJbih2YWx1ZSwgbmFtZSwgb3B0aW9ucyk7XG4gIGlmIChvcHRpb25zLmdsb2JhbCkge1xuICAgIGlmIChzaW1wbGUpIE9ba2V5XSA9IHZhbHVlO1xuICAgIGVsc2UgZGVmaW5lR2xvYmFsUHJvcGVydHkoa2V5LCB2YWx1ZSk7XG4gIH0gZWxzZSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghb3B0aW9ucy51bnNhZmUpIGRlbGV0ZSBPW2tleV07XG4gICAgICBlbHNlIGlmIChPW2tleV0pIHNpbXBsZSA9IHRydWU7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHsgLyogZW1wdHkgKi8gfVxuICAgIGlmIChzaW1wbGUpIE9ba2V5XSA9IHZhbHVlO1xuICAgIGVsc2UgZGVmaW5lUHJvcGVydHlNb2R1bGUuZihPLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgY29uZmlndXJhYmxlOiAhb3B0aW9ucy5ub25Db25maWd1cmFibGUsXG4gICAgICB3cml0YWJsZTogIW9wdGlvbnMubm9uV3JpdGFibGVcbiAgICB9KTtcbiAgfSByZXR1cm4gTztcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWRlZmluZXByb3BlcnR5IC0tIHNhZmVcbnZhciBkZWZpbmVQcm9wZXJ0eSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICB0cnkge1xuICAgIGRlZmluZVByb3BlcnR5KGdsb2JhbCwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBnbG9iYWxba2V5XSA9IHZhbHVlO1xuICB9IHJldHVybiB2YWx1ZTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcblxuLy8gRGV0ZWN0IElFOCdzIGluY29tcGxldGUgZGVmaW5lUHJvcGVydHkgaW1wbGVtZW50YXRpb25cbm1vZHVsZS5leHBvcnRzID0gIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1kZWZpbmVwcm9wZXJ0eSAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAxLCB7IGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gNzsgfSB9KVsxXSAhPT0gNztcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1vYmplY3QnKTtcblxudmFyIGRvY3VtZW50ID0gZ2xvYmFsLmRvY3VtZW50O1xuLy8gdHlwZW9mIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQgaXMgJ29iamVjdCcgaW4gb2xkIElFXG52YXIgRVhJU1RTID0gaXNPYmplY3QoZG9jdW1lbnQpICYmIGlzT2JqZWN0KGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gRVhJU1RTID8gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChpdCkgOiB7fTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG4vKiBnbG9iYWwgQnVuIC0tIEJ1biBjYXNlICovXG5tb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiBCdW4gPT0gJ2Z1bmN0aW9uJyAmJiBCdW4gJiYgdHlwZW9mIEJ1bi52ZXJzaW9uID09ICdzdHJpbmcnO1xuIiwiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSB0eXBlb2YgbmF2aWdhdG9yICE9ICd1bmRlZmluZWQnICYmIFN0cmluZyhuYXZpZ2F0b3IudXNlckFnZW50KSB8fCAnJztcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgdXNlckFnZW50ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2VuZ2luZS11c2VyLWFnZW50Jyk7XG5cbnZhciBwcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3M7XG52YXIgRGVubyA9IGdsb2JhbC5EZW5vO1xudmFyIHZlcnNpb25zID0gcHJvY2VzcyAmJiBwcm9jZXNzLnZlcnNpb25zIHx8IERlbm8gJiYgRGVuby52ZXJzaW9uO1xudmFyIHY4ID0gdmVyc2lvbnMgJiYgdmVyc2lvbnMudjg7XG52YXIgbWF0Y2gsIHZlcnNpb247XG5cbmlmICh2OCkge1xuICBtYXRjaCA9IHY4LnNwbGl0KCcuJyk7XG4gIC8vIGluIG9sZCBDaHJvbWUsIHZlcnNpb25zIG9mIFY4IGlzbid0IFY4ID0gQ2hyb21lIC8gMTBcbiAgLy8gYnV0IHRoZWlyIGNvcnJlY3QgdmVyc2lvbnMgYXJlIG5vdCBpbnRlcmVzdGluZyBmb3IgdXNcbiAgdmVyc2lvbiA9IG1hdGNoWzBdID4gMCAmJiBtYXRjaFswXSA8IDQgPyAxIDogKyhtYXRjaFswXSArIG1hdGNoWzFdKTtcbn1cblxuLy8gQnJvd3NlckZTIE5vZGVKUyBgcHJvY2Vzc2AgcG9seWZpbGwgaW5jb3JyZWN0bHkgc2V0IGAudjhgIHRvIGAwLjBgXG4vLyBzbyBjaGVjayBgdXNlckFnZW50YCBldmVuIGlmIGAudjhgIGV4aXN0cywgYnV0IDBcbmlmICghdmVyc2lvbiAmJiB1c2VyQWdlbnQpIHtcbiAgbWF0Y2ggPSB1c2VyQWdlbnQubWF0Y2goL0VkZ2VcXC8oXFxkKykvKTtcbiAgaWYgKCFtYXRjaCB8fCBtYXRjaFsxXSA+PSA3NCkge1xuICAgIG1hdGNoID0gdXNlckFnZW50Lm1hdGNoKC9DaHJvbWVcXC8oXFxkKykvKTtcbiAgICBpZiAobWF0Y2gpIHZlcnNpb24gPSArbWF0Y2hbMV07XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB2ZXJzaW9uO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gSUU4LSBkb24ndCBlbnVtIGJ1ZyBrZXlzXG5tb2R1bGUuZXhwb3J0cyA9IFtcbiAgJ2NvbnN0cnVjdG9yJyxcbiAgJ2hhc093blByb3BlcnR5JyxcbiAgJ2lzUHJvdG90eXBlT2YnLFxuICAncHJvcGVydHlJc0VudW1lcmFibGUnLFxuICAndG9Mb2NhbGVTdHJpbmcnLFxuICAndG9TdHJpbmcnLFxuICAndmFsdWVPZidcbl07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yJykuZjtcbnZhciBjcmVhdGVOb25FbnVtZXJhYmxlUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLW5vbi1lbnVtZXJhYmxlLXByb3BlcnR5Jyk7XG52YXIgZGVmaW5lQnVpbHRJbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZWZpbmUtYnVpbHQtaW4nKTtcbnZhciBkZWZpbmVHbG9iYWxQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZWZpbmUtZ2xvYmFsLXByb3BlcnR5Jyk7XG52YXIgY29weUNvbnN0cnVjdG9yUHJvcGVydGllcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jb3B5LWNvbnN0cnVjdG9yLXByb3BlcnRpZXMnKTtcbnZhciBpc0ZvcmNlZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1mb3JjZWQnKTtcblxuLypcbiAgb3B0aW9ucy50YXJnZXQgICAgICAgICAtIG5hbWUgb2YgdGhlIHRhcmdldCBvYmplY3RcbiAgb3B0aW9ucy5nbG9iYWwgICAgICAgICAtIHRhcmdldCBpcyB0aGUgZ2xvYmFsIG9iamVjdFxuICBvcHRpb25zLnN0YXQgICAgICAgICAgIC0gZXhwb3J0IGFzIHN0YXRpYyBtZXRob2RzIG9mIHRhcmdldFxuICBvcHRpb25zLnByb3RvICAgICAgICAgIC0gZXhwb3J0IGFzIHByb3RvdHlwZSBtZXRob2RzIG9mIHRhcmdldFxuICBvcHRpb25zLnJlYWwgICAgICAgICAgIC0gcmVhbCBwcm90b3R5cGUgbWV0aG9kIGZvciB0aGUgYHB1cmVgIHZlcnNpb25cbiAgb3B0aW9ucy5mb3JjZWQgICAgICAgICAtIGV4cG9ydCBldmVuIGlmIHRoZSBuYXRpdmUgZmVhdHVyZSBpcyBhdmFpbGFibGVcbiAgb3B0aW9ucy5iaW5kICAgICAgICAgICAtIGJpbmQgbWV0aG9kcyB0byB0aGUgdGFyZ2V0LCByZXF1aXJlZCBmb3IgdGhlIGBwdXJlYCB2ZXJzaW9uXG4gIG9wdGlvbnMud3JhcCAgICAgICAgICAgLSB3cmFwIGNvbnN0cnVjdG9ycyB0byBwcmV2ZW50aW5nIGdsb2JhbCBwb2xsdXRpb24sIHJlcXVpcmVkIGZvciB0aGUgYHB1cmVgIHZlcnNpb25cbiAgb3B0aW9ucy51bnNhZmUgICAgICAgICAtIHVzZSB0aGUgc2ltcGxlIGFzc2lnbm1lbnQgb2YgcHJvcGVydHkgaW5zdGVhZCBvZiBkZWxldGUgKyBkZWZpbmVQcm9wZXJ0eVxuICBvcHRpb25zLnNoYW0gICAgICAgICAgIC0gYWRkIGEgZmxhZyB0byBub3QgY29tcGxldGVseSBmdWxsIHBvbHlmaWxsc1xuICBvcHRpb25zLmVudW1lcmFibGUgICAgIC0gZXhwb3J0IGFzIGVudW1lcmFibGUgcHJvcGVydHlcbiAgb3B0aW9ucy5kb250Q2FsbEdldFNldCAtIHByZXZlbnQgY2FsbGluZyBhIGdldHRlciBvbiB0YXJnZXRcbiAgb3B0aW9ucy5uYW1lICAgICAgICAgICAtIHRoZSAubmFtZSBvZiB0aGUgZnVuY3Rpb24gaWYgaXQgZG9lcyBub3QgbWF0Y2ggdGhlIGtleVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9wdGlvbnMsIHNvdXJjZSkge1xuICB2YXIgVEFSR0VUID0gb3B0aW9ucy50YXJnZXQ7XG4gIHZhciBHTE9CQUwgPSBvcHRpb25zLmdsb2JhbDtcbiAgdmFyIFNUQVRJQyA9IG9wdGlvbnMuc3RhdDtcbiAgdmFyIEZPUkNFRCwgdGFyZ2V0LCBrZXksIHRhcmdldFByb3BlcnR5LCBzb3VyY2VQcm9wZXJ0eSwgZGVzY3JpcHRvcjtcbiAgaWYgKEdMT0JBTCkge1xuICAgIHRhcmdldCA9IGdsb2JhbDtcbiAgfSBlbHNlIGlmIChTVEFUSUMpIHtcbiAgICB0YXJnZXQgPSBnbG9iYWxbVEFSR0VUXSB8fCBkZWZpbmVHbG9iYWxQcm9wZXJ0eShUQVJHRVQsIHt9KTtcbiAgfSBlbHNlIHtcbiAgICB0YXJnZXQgPSBnbG9iYWxbVEFSR0VUXSAmJiBnbG9iYWxbVEFSR0VUXS5wcm90b3R5cGU7XG4gIH1cbiAgaWYgKHRhcmdldCkgZm9yIChrZXkgaW4gc291cmNlKSB7XG4gICAgc291cmNlUHJvcGVydHkgPSBzb3VyY2Vba2V5XTtcbiAgICBpZiAob3B0aW9ucy5kb250Q2FsbEdldFNldCkge1xuICAgICAgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSk7XG4gICAgICB0YXJnZXRQcm9wZXJ0eSA9IGRlc2NyaXB0b3IgJiYgZGVzY3JpcHRvci52YWx1ZTtcbiAgICB9IGVsc2UgdGFyZ2V0UHJvcGVydHkgPSB0YXJnZXRba2V5XTtcbiAgICBGT1JDRUQgPSBpc0ZvcmNlZChHTE9CQUwgPyBrZXkgOiBUQVJHRVQgKyAoU1RBVElDID8gJy4nIDogJyMnKSArIGtleSwgb3B0aW9ucy5mb3JjZWQpO1xuICAgIC8vIGNvbnRhaW5lZCBpbiB0YXJnZXRcbiAgICBpZiAoIUZPUkNFRCAmJiB0YXJnZXRQcm9wZXJ0eSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBpZiAodHlwZW9mIHNvdXJjZVByb3BlcnR5ID09IHR5cGVvZiB0YXJnZXRQcm9wZXJ0eSkgY29udGludWU7XG4gICAgICBjb3B5Q29uc3RydWN0b3JQcm9wZXJ0aWVzKHNvdXJjZVByb3BlcnR5LCB0YXJnZXRQcm9wZXJ0eSk7XG4gICAgfVxuICAgIC8vIGFkZCBhIGZsYWcgdG8gbm90IGNvbXBsZXRlbHkgZnVsbCBwb2x5ZmlsbHNcbiAgICBpZiAob3B0aW9ucy5zaGFtIHx8ICh0YXJnZXRQcm9wZXJ0eSAmJiB0YXJnZXRQcm9wZXJ0eS5zaGFtKSkge1xuICAgICAgY3JlYXRlTm9uRW51bWVyYWJsZVByb3BlcnR5KHNvdXJjZVByb3BlcnR5LCAnc2hhbScsIHRydWUpO1xuICAgIH1cbiAgICBkZWZpbmVCdWlsdEluKHRhcmdldCwga2V5LCBzb3VyY2VQcm9wZXJ0eSwgb3B0aW9ucyk7XG4gIH1cbn07XG4iLCIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuICEhZXhlYygpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIE5BVElWRV9CSU5EID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmQtbmF0aXZlJyk7XG5cbnZhciBGdW5jdGlvblByb3RvdHlwZSA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcbnZhciBhcHBseSA9IEZ1bmN0aW9uUHJvdG90eXBlLmFwcGx5O1xudmFyIGNhbGwgPSBGdW5jdGlvblByb3RvdHlwZS5jYWxsO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tcmVmbGVjdCAtLSBzYWZlXG5tb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiBSZWZsZWN0ID09ICdvYmplY3QnICYmIFJlZmxlY3QuYXBwbHkgfHwgKE5BVElWRV9CSU5EID8gY2FsbC5iaW5kKGFwcGx5KSA6IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGNhbGwuYXBwbHkoYXBwbHksIGFyZ3VtZW50cyk7XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1mdW5jdGlvbi1wcm90b3R5cGUtYmluZCAtLSBzYWZlXG4gIHZhciB0ZXN0ID0gKGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfSkuYmluZCgpO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zIC0tIHNhZmVcbiAgcmV0dXJuIHR5cGVvZiB0ZXN0ICE9ICdmdW5jdGlvbicgfHwgdGVzdC5oYXNPd25Qcm9wZXJ0eSgncHJvdG90eXBlJyk7XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBOQVRJVkVfQklORCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1iaW5kLW5hdGl2ZScpO1xuXG52YXIgY2FsbCA9IEZ1bmN0aW9uLnByb3RvdHlwZS5jYWxsO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE5BVElWRV9CSU5EID8gY2FsbC5iaW5kKGNhbGwpIDogZnVuY3Rpb24gKCkge1xuICByZXR1cm4gY2FsbC5hcHBseShjYWxsLCBhcmd1bWVudHMpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIGhhc093biA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oYXMtb3duLXByb3BlcnR5Jyk7XG5cbnZhciBGdW5jdGlvblByb3RvdHlwZSA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZ2V0b3ducHJvcGVydHlkZXNjcmlwdG9yIC0tIHNhZmVcbnZhciBnZXREZXNjcmlwdG9yID0gREVTQ1JJUFRPUlMgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcblxudmFyIEVYSVNUUyA9IGhhc093bihGdW5jdGlvblByb3RvdHlwZSwgJ25hbWUnKTtcbi8vIGFkZGl0aW9uYWwgcHJvdGVjdGlvbiBmcm9tIG1pbmlmaWVkIC8gbWFuZ2xlZCAvIGRyb3BwZWQgZnVuY3Rpb24gbmFtZXNcbnZhciBQUk9QRVIgPSBFWElTVFMgJiYgKGZ1bmN0aW9uIHNvbWV0aGluZygpIHsgLyogZW1wdHkgKi8gfSkubmFtZSA9PT0gJ3NvbWV0aGluZyc7XG52YXIgQ09ORklHVVJBQkxFID0gRVhJU1RTICYmICghREVTQ1JJUFRPUlMgfHwgKERFU0NSSVBUT1JTICYmIGdldERlc2NyaXB0b3IoRnVuY3Rpb25Qcm90b3R5cGUsICduYW1lJykuY29uZmlndXJhYmxlKSk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBFWElTVFM6IEVYSVNUUyxcbiAgUFJPUEVSOiBQUk9QRVIsXG4gIENPTkZJR1VSQUJMRTogQ09ORklHVVJBQkxFXG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIE5BVElWRV9CSU5EID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmQtbmF0aXZlJyk7XG5cbnZhciBGdW5jdGlvblByb3RvdHlwZSA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcbnZhciBjYWxsID0gRnVuY3Rpb25Qcm90b3R5cGUuY2FsbDtcbnZhciB1bmN1cnJ5VGhpc1dpdGhCaW5kID0gTkFUSVZFX0JJTkQgJiYgRnVuY3Rpb25Qcm90b3R5cGUuYmluZC5iaW5kKGNhbGwsIGNhbGwpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE5BVElWRV9CSU5EID8gdW5jdXJyeVRoaXNXaXRoQmluZCA6IGZ1bmN0aW9uIChmbikge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBjYWxsLmFwcGx5KGZuLCBhcmd1bWVudHMpO1xuICB9O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xuXG52YXIgYUZ1bmN0aW9uID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIHJldHVybiBpc0NhbGxhYmxlKGFyZ3VtZW50KSA/IGFyZ3VtZW50IDogdW5kZWZpbmVkO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobmFtZXNwYWNlLCBtZXRob2QpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPCAyID8gYUZ1bmN0aW9uKGdsb2JhbFtuYW1lc3BhY2VdKSA6IGdsb2JhbFtuYW1lc3BhY2VdICYmIGdsb2JhbFtuYW1lc3BhY2VdW21ldGhvZF07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGFDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hLWNhbGxhYmxlJyk7XG52YXIgaXNOdWxsT3JVbmRlZmluZWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtbnVsbC1vci11bmRlZmluZWQnKTtcblxuLy8gYEdldE1ldGhvZGAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWdldG1ldGhvZFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoViwgUCkge1xuICB2YXIgZnVuYyA9IFZbUF07XG4gIHJldHVybiBpc051bGxPclVuZGVmaW5lZChmdW5jKSA/IHVuZGVmaW5lZCA6IGFDYWxsYWJsZShmdW5jKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY2hlY2sgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGl0ICYmIGl0Lk1hdGggPT09IE1hdGggJiYgaXQ7XG59O1xuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvODYjaXNzdWVjb21tZW50LTExNTc1OTAyOFxubW9kdWxlLmV4cG9ydHMgPVxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tZ2xvYmFsLXRoaXMgLS0gc2FmZVxuICBjaGVjayh0eXBlb2YgZ2xvYmFsVGhpcyA9PSAnb2JqZWN0JyAmJiBnbG9iYWxUaGlzKSB8fFxuICBjaGVjayh0eXBlb2Ygd2luZG93ID09ICdvYmplY3QnICYmIHdpbmRvdykgfHxcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtZ2xvYmFscyAtLSBzYWZlXG4gIGNoZWNrKHR5cGVvZiBzZWxmID09ICdvYmplY3QnICYmIHNlbGYpIHx8XG4gIGNoZWNrKHR5cGVvZiBnbG9iYWwgPT0gJ29iamVjdCcgJiYgZ2xvYmFsKSB8fFxuICBjaGVjayh0eXBlb2YgdGhpcyA9PSAnb2JqZWN0JyAmJiB0aGlzKSB8fFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmV3LWZ1bmMgLS0gZmFsbGJhY2tcbiAgKGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH0pKCkgfHwgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1vYmplY3QnKTtcblxudmFyIGhhc093blByb3BlcnR5ID0gdW5jdXJyeVRoaXMoe30uaGFzT3duUHJvcGVydHkpO1xuXG4vLyBgSGFzT3duUHJvcGVydHlgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1oYXNvd25wcm9wZXJ0eVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1oYXNvd24gLS0gc2FmZVxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuaGFzT3duIHx8IGZ1bmN0aW9uIGhhc093bihpdCwga2V5KSB7XG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eSh0b09iamVjdChpdCksIGtleSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSB7fTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgY3JlYXRlRWxlbWVudCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kb2N1bWVudC1jcmVhdGUtZWxlbWVudCcpO1xuXG4vLyBUaGFua3MgdG8gSUU4IGZvciBpdHMgZnVubnkgZGVmaW5lUHJvcGVydHlcbm1vZHVsZS5leHBvcnRzID0gIURFU0NSSVBUT1JTICYmICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZGVmaW5lcHJvcGVydHkgLS0gcmVxdWlyZWQgZm9yIHRlc3RpbmdcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjcmVhdGVFbGVtZW50KCdkaXYnKSwgJ2EnLCB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9XG4gIH0pLmEgIT09IDc7XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2xhc3NvZi1yYXcnKTtcblxudmFyICRPYmplY3QgPSBPYmplY3Q7XG52YXIgc3BsaXQgPSB1bmN1cnJ5VGhpcygnJy5zcGxpdCk7XG5cbi8vIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgYW5kIG5vbi1lbnVtZXJhYmxlIG9sZCBWOCBzdHJpbmdzXG5tb2R1bGUuZXhwb3J0cyA9IGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gdGhyb3dzIGFuIGVycm9yIGluIHJoaW5vLCBzZWUgaHR0cHM6Ly9naXRodWIuY29tL21vemlsbGEvcmhpbm8vaXNzdWVzLzM0NlxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zIC0tIHNhZmVcbiAgcmV0dXJuICEkT2JqZWN0KCd6JykucHJvcGVydHlJc0VudW1lcmFibGUoMCk7XG59KSA/IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gY2xhc3NvZihpdCkgPT09ICdTdHJpbmcnID8gc3BsaXQoaXQsICcnKSA6ICRPYmplY3QoaXQpO1xufSA6ICRPYmplY3Q7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xudmFyIHN0b3JlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NoYXJlZC1zdG9yZScpO1xuXG52YXIgZnVuY3Rpb25Ub1N0cmluZyA9IHVuY3VycnlUaGlzKEZ1bmN0aW9uLnRvU3RyaW5nKTtcblxuLy8gdGhpcyBoZWxwZXIgYnJva2VuIGluIGBjb3JlLWpzQDMuNC4xLTMuNC40YCwgc28gd2UgY2FuJ3QgdXNlIGBzaGFyZWRgIGhlbHBlclxuaWYgKCFpc0NhbGxhYmxlKHN0b3JlLmluc3BlY3RTb3VyY2UpKSB7XG4gIHN0b3JlLmluc3BlY3RTb3VyY2UgPSBmdW5jdGlvbiAoaXQpIHtcbiAgICByZXR1cm4gZnVuY3Rpb25Ub1N0cmluZyhpdCk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3RvcmUuaW5zcGVjdFNvdXJjZTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBOQVRJVkVfV0VBS19NQVAgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2Vhay1tYXAtYmFzaWMtZGV0ZWN0aW9uJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW9iamVjdCcpO1xudmFyIGNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jcmVhdGUtbm9uLWVudW1lcmFibGUtcHJvcGVydHknKTtcbnZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xudmFyIHNoYXJlZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zaGFyZWQtc3RvcmUnKTtcbnZhciBzaGFyZWRLZXkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2hhcmVkLWtleScpO1xudmFyIGhpZGRlbktleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGlkZGVuLWtleXMnKTtcblxudmFyIE9CSkVDVF9BTFJFQURZX0lOSVRJQUxJWkVEID0gJ09iamVjdCBhbHJlYWR5IGluaXRpYWxpemVkJztcbnZhciBUeXBlRXJyb3IgPSBnbG9iYWwuVHlwZUVycm9yO1xudmFyIFdlYWtNYXAgPSBnbG9iYWwuV2Vha01hcDtcbnZhciBzZXQsIGdldCwgaGFzO1xuXG52YXIgZW5mb3JjZSA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaGFzKGl0KSA/IGdldChpdCkgOiBzZXQoaXQsIHt9KTtcbn07XG5cbnZhciBnZXR0ZXJGb3IgPSBmdW5jdGlvbiAoVFlQRSkge1xuICByZXR1cm4gZnVuY3Rpb24gKGl0KSB7XG4gICAgdmFyIHN0YXRlO1xuICAgIGlmICghaXNPYmplY3QoaXQpIHx8IChzdGF0ZSA9IGdldChpdCkpLnR5cGUgIT09IFRZUEUpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0luY29tcGF0aWJsZSByZWNlaXZlciwgJyArIFRZUEUgKyAnIHJlcXVpcmVkJyk7XG4gICAgfSByZXR1cm4gc3RhdGU7XG4gIH07XG59O1xuXG5pZiAoTkFUSVZFX1dFQUtfTUFQIHx8IHNoYXJlZC5zdGF0ZSkge1xuICB2YXIgc3RvcmUgPSBzaGFyZWQuc3RhdGUgfHwgKHNoYXJlZC5zdGF0ZSA9IG5ldyBXZWFrTWFwKCkpO1xuICAvKiBlc2xpbnQtZGlzYWJsZSBuby1zZWxmLWFzc2lnbiAtLSBwcm90b3R5cGUgbWV0aG9kcyBwcm90ZWN0aW9uICovXG4gIHN0b3JlLmdldCA9IHN0b3JlLmdldDtcbiAgc3RvcmUuaGFzID0gc3RvcmUuaGFzO1xuICBzdG9yZS5zZXQgPSBzdG9yZS5zZXQ7XG4gIC8qIGVzbGludC1lbmFibGUgbm8tc2VsZi1hc3NpZ24gLS0gcHJvdG90eXBlIG1ldGhvZHMgcHJvdGVjdGlvbiAqL1xuICBzZXQgPSBmdW5jdGlvbiAoaXQsIG1ldGFkYXRhKSB7XG4gICAgaWYgKHN0b3JlLmhhcyhpdCkpIHRocm93IG5ldyBUeXBlRXJyb3IoT0JKRUNUX0FMUkVBRFlfSU5JVElBTElaRUQpO1xuICAgIG1ldGFkYXRhLmZhY2FkZSA9IGl0O1xuICAgIHN0b3JlLnNldChpdCwgbWV0YWRhdGEpO1xuICAgIHJldHVybiBtZXRhZGF0YTtcbiAgfTtcbiAgZ2V0ID0gZnVuY3Rpb24gKGl0KSB7XG4gICAgcmV0dXJuIHN0b3JlLmdldChpdCkgfHwge307XG4gIH07XG4gIGhhcyA9IGZ1bmN0aW9uIChpdCkge1xuICAgIHJldHVybiBzdG9yZS5oYXMoaXQpO1xuICB9O1xufSBlbHNlIHtcbiAgdmFyIFNUQVRFID0gc2hhcmVkS2V5KCdzdGF0ZScpO1xuICBoaWRkZW5LZXlzW1NUQVRFXSA9IHRydWU7XG4gIHNldCA9IGZ1bmN0aW9uIChpdCwgbWV0YWRhdGEpIHtcbiAgICBpZiAoaGFzT3duKGl0LCBTVEFURSkpIHRocm93IG5ldyBUeXBlRXJyb3IoT0JKRUNUX0FMUkVBRFlfSU5JVElBTElaRUQpO1xuICAgIG1ldGFkYXRhLmZhY2FkZSA9IGl0O1xuICAgIGNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eShpdCwgU1RBVEUsIG1ldGFkYXRhKTtcbiAgICByZXR1cm4gbWV0YWRhdGE7XG4gIH07XG4gIGdldCA9IGZ1bmN0aW9uIChpdCkge1xuICAgIHJldHVybiBoYXNPd24oaXQsIFNUQVRFKSA/IGl0W1NUQVRFXSA6IHt9O1xuICB9O1xuICBoYXMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgICByZXR1cm4gaGFzT3duKGl0LCBTVEFURSk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBzZXQ6IHNldCxcbiAgZ2V0OiBnZXQsXG4gIGhhczogaGFzLFxuICBlbmZvcmNlOiBlbmZvcmNlLFxuICBnZXR0ZXJGb3I6IGdldHRlckZvclxufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtSXNIVE1MRERBLWludGVybmFsLXNsb3RcbnZhciBkb2N1bWVudEFsbCA9IHR5cGVvZiBkb2N1bWVudCA9PSAnb2JqZWN0JyAmJiBkb2N1bWVudC5hbGw7XG5cbi8vIGBJc0NhbGxhYmxlYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtaXNjYWxsYWJsZVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHVuaWNvcm4vbm8tdHlwZW9mLXVuZGVmaW5lZCAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xubW9kdWxlLmV4cG9ydHMgPSB0eXBlb2YgZG9jdW1lbnRBbGwgPT0gJ3VuZGVmaW5lZCcgJiYgZG9jdW1lbnRBbGwgIT09IHVuZGVmaW5lZCA/IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICByZXR1cm4gdHlwZW9mIGFyZ3VtZW50ID09ICdmdW5jdGlvbicgfHwgYXJndW1lbnQgPT09IGRvY3VtZW50QWxsO1xufSA6IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICByZXR1cm4gdHlwZW9mIGFyZ3VtZW50ID09ICdmdW5jdGlvbic7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xuXG52YXIgcmVwbGFjZW1lbnQgPSAvI3xcXC5wcm90b3R5cGVcXC4vO1xuXG52YXIgaXNGb3JjZWQgPSBmdW5jdGlvbiAoZmVhdHVyZSwgZGV0ZWN0aW9uKSB7XG4gIHZhciB2YWx1ZSA9IGRhdGFbbm9ybWFsaXplKGZlYXR1cmUpXTtcbiAgcmV0dXJuIHZhbHVlID09PSBQT0xZRklMTCA/IHRydWVcbiAgICA6IHZhbHVlID09PSBOQVRJVkUgPyBmYWxzZVxuICAgIDogaXNDYWxsYWJsZShkZXRlY3Rpb24pID8gZmFpbHMoZGV0ZWN0aW9uKVxuICAgIDogISFkZXRlY3Rpb247XG59O1xuXG52YXIgbm9ybWFsaXplID0gaXNGb3JjZWQubm9ybWFsaXplID0gZnVuY3Rpb24gKHN0cmluZykge1xuICByZXR1cm4gU3RyaW5nKHN0cmluZykucmVwbGFjZShyZXBsYWNlbWVudCwgJy4nKS50b0xvd2VyQ2FzZSgpO1xufTtcblxudmFyIGRhdGEgPSBpc0ZvcmNlZC5kYXRhID0ge307XG52YXIgTkFUSVZFID0gaXNGb3JjZWQuTkFUSVZFID0gJ04nO1xudmFyIFBPTFlGSUxMID0gaXNGb3JjZWQuUE9MWUZJTEwgPSAnUCc7XG5cbm1vZHVsZS5leHBvcnRzID0gaXNGb3JjZWQ7XG4iLCIndXNlIHN0cmljdCc7XG4vLyB3ZSBjYW4ndCB1c2UganVzdCBgaXQgPT0gbnVsbGAgc2luY2Ugb2YgYGRvY3VtZW50LmFsbGAgc3BlY2lhbCBjYXNlXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLUlzSFRNTEREQS1pbnRlcm5hbC1zbG90LWFlY1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGl0ID09PSBudWxsIHx8IGl0ID09PSB1bmRlZmluZWQ7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHR5cGVvZiBpdCA9PSAnb2JqZWN0JyA/IGl0ICE9PSBudWxsIDogaXNDYWxsYWJsZShpdCk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSBmYWxzZTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnZXRCdWlsdEluID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dldC1idWlsdC1pbicpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciBpc1Byb3RvdHlwZU9mID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1pcy1wcm90b3R5cGUtb2YnKTtcbnZhciBVU0VfU1lNQk9MX0FTX1VJRCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy91c2Utc3ltYm9sLWFzLXVpZCcpO1xuXG52YXIgJE9iamVjdCA9IE9iamVjdDtcblxubW9kdWxlLmV4cG9ydHMgPSBVU0VfU1lNQk9MX0FTX1VJRCA/IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdHlwZW9mIGl0ID09ICdzeW1ib2wnO1xufSA6IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgJFN5bWJvbCA9IGdldEJ1aWx0SW4oJ1N5bWJvbCcpO1xuICByZXR1cm4gaXNDYWxsYWJsZSgkU3ltYm9sKSAmJiBpc1Byb3RvdHlwZU9mKCRTeW1ib2wucHJvdG90eXBlLCAkT2JqZWN0KGl0KSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWxlbmd0aCcpO1xuXG4vLyBgTGVuZ3RoT2ZBcnJheUxpa2VgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1sZW5ndGhvZmFycmF5bGlrZVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiB0b0xlbmd0aChvYmoubGVuZ3RoKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgaGFzT3duID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hhcy1vd24tcHJvcGVydHknKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIENPTkZJR1VSQUJMRV9GVU5DVElPTl9OQU1FID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLW5hbWUnKS5DT05GSUdVUkFCTEU7XG52YXIgaW5zcGVjdFNvdXJjZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbnNwZWN0LXNvdXJjZScpO1xudmFyIEludGVybmFsU3RhdGVNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaW50ZXJuYWwtc3RhdGUnKTtcblxudmFyIGVuZm9yY2VJbnRlcm5hbFN0YXRlID0gSW50ZXJuYWxTdGF0ZU1vZHVsZS5lbmZvcmNlO1xudmFyIGdldEludGVybmFsU3RhdGUgPSBJbnRlcm5hbFN0YXRlTW9kdWxlLmdldDtcbnZhciAkU3RyaW5nID0gU3RyaW5nO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1kZWZpbmVwcm9wZXJ0eSAtLSBzYWZlXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgc3RyaW5nU2xpY2UgPSB1bmN1cnJ5VGhpcygnJy5zbGljZSk7XG52YXIgcmVwbGFjZSA9IHVuY3VycnlUaGlzKCcnLnJlcGxhY2UpO1xudmFyIGpvaW4gPSB1bmN1cnJ5VGhpcyhbXS5qb2luKTtcblxudmFyIENPTkZJR1VSQUJMRV9MRU5HVEggPSBERVNDUklQVE9SUyAmJiAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gZGVmaW5lUHJvcGVydHkoZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9LCAnbGVuZ3RoJywgeyB2YWx1ZTogOCB9KS5sZW5ndGggIT09IDg7XG59KTtcblxudmFyIFRFTVBMQVRFID0gU3RyaW5nKFN0cmluZykuc3BsaXQoJ1N0cmluZycpO1xuXG52YXIgbWFrZUJ1aWx0SW4gPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh2YWx1ZSwgbmFtZSwgb3B0aW9ucykge1xuICBpZiAoc3RyaW5nU2xpY2UoJFN0cmluZyhuYW1lKSwgMCwgNykgPT09ICdTeW1ib2woJykge1xuICAgIG5hbWUgPSAnWycgKyByZXBsYWNlKCRTdHJpbmcobmFtZSksIC9eU3ltYm9sXFwoKFteKV0qKVxcKS4qJC8sICckMScpICsgJ10nO1xuICB9XG4gIGlmIChvcHRpb25zICYmIG9wdGlvbnMuZ2V0dGVyKSBuYW1lID0gJ2dldCAnICsgbmFtZTtcbiAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5zZXR0ZXIpIG5hbWUgPSAnc2V0ICcgKyBuYW1lO1xuICBpZiAoIWhhc093bih2YWx1ZSwgJ25hbWUnKSB8fCAoQ09ORklHVVJBQkxFX0ZVTkNUSU9OX05BTUUgJiYgdmFsdWUubmFtZSAhPT0gbmFtZSkpIHtcbiAgICBpZiAoREVTQ1JJUFRPUlMpIGRlZmluZVByb3BlcnR5KHZhbHVlLCAnbmFtZScsIHsgdmFsdWU6IG5hbWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9KTtcbiAgICBlbHNlIHZhbHVlLm5hbWUgPSBuYW1lO1xuICB9XG4gIGlmIChDT05GSUdVUkFCTEVfTEVOR1RIICYmIG9wdGlvbnMgJiYgaGFzT3duKG9wdGlvbnMsICdhcml0eScpICYmIHZhbHVlLmxlbmd0aCAhPT0gb3B0aW9ucy5hcml0eSkge1xuICAgIGRlZmluZVByb3BlcnR5KHZhbHVlLCAnbGVuZ3RoJywgeyB2YWx1ZTogb3B0aW9ucy5hcml0eSB9KTtcbiAgfVxuICB0cnkge1xuICAgIGlmIChvcHRpb25zICYmIGhhc093bihvcHRpb25zLCAnY29uc3RydWN0b3InKSAmJiBvcHRpb25zLmNvbnN0cnVjdG9yKSB7XG4gICAgICBpZiAoREVTQ1JJUFRPUlMpIGRlZmluZVByb3BlcnR5KHZhbHVlLCAncHJvdG90eXBlJywgeyB3cml0YWJsZTogZmFsc2UgfSk7XG4gICAgLy8gaW4gVjggfiBDaHJvbWUgNTMsIHByb3RvdHlwZXMgb2Ygc29tZSBtZXRob2RzLCBsaWtlIGBBcnJheS5wcm90b3R5cGUudmFsdWVzYCwgYXJlIG5vbi13cml0YWJsZVxuICAgIH0gZWxzZSBpZiAodmFsdWUucHJvdG90eXBlKSB2YWx1ZS5wcm90b3R5cGUgPSB1bmRlZmluZWQ7XG4gIH0gY2F0Y2ggKGVycm9yKSB7IC8qIGVtcHR5ICovIH1cbiAgdmFyIHN0YXRlID0gZW5mb3JjZUludGVybmFsU3RhdGUodmFsdWUpO1xuICBpZiAoIWhhc093bihzdGF0ZSwgJ3NvdXJjZScpKSB7XG4gICAgc3RhdGUuc291cmNlID0gam9pbihURU1QTEFURSwgdHlwZW9mIG5hbWUgPT0gJ3N0cmluZycgPyBuYW1lIDogJycpO1xuICB9IHJldHVybiB2YWx1ZTtcbn07XG5cbi8vIGFkZCBmYWtlIEZ1bmN0aW9uI3RvU3RyaW5nIGZvciBjb3JyZWN0IHdvcmsgd3JhcHBlZCBtZXRob2RzIC8gY29uc3RydWN0b3JzIHdpdGggbWV0aG9kcyBsaWtlIExvRGFzaCBpc05hdGl2ZVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWV4dGVuZC1uYXRpdmUgLS0gcmVxdWlyZWRcbkZ1bmN0aW9uLnByb3RvdHlwZS50b1N0cmluZyA9IG1ha2VCdWlsdEluKGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICByZXR1cm4gaXNDYWxsYWJsZSh0aGlzKSAmJiBnZXRJbnRlcm5hbFN0YXRlKHRoaXMpLnNvdXJjZSB8fCBpbnNwZWN0U291cmNlKHRoaXMpO1xufSwgJ3RvU3RyaW5nJyk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY2VpbCA9IE1hdGguY2VpbDtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG5cbi8vIGBNYXRoLnRydW5jYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtbWF0aC50cnVuY1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW1hdGgtdHJ1bmMgLS0gc2FmZVxubW9kdWxlLmV4cG9ydHMgPSBNYXRoLnRydW5jIHx8IGZ1bmN0aW9uIHRydW5jKHgpIHtcbiAgdmFyIG4gPSAreDtcbiAgcmV0dXJuIChuID4gMCA/IGZsb29yIDogY2VpbCkobik7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG52YXIgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaWU4LWRvbS1kZWZpbmUnKTtcbnZhciBWOF9QUk9UT1RZUEVfREVGSU5FX0JVRyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy92OC1wcm90b3R5cGUtZGVmaW5lLWJ1ZycpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FuLW9iamVjdCcpO1xudmFyIHRvUHJvcGVydHlLZXkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tcHJvcGVydHkta2V5Jyk7XG5cbnZhciAkVHlwZUVycm9yID0gVHlwZUVycm9yO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1kZWZpbmVwcm9wZXJ0eSAtLSBzYWZlXG52YXIgJGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1nZXRvd25wcm9wZXJ0eWRlc2NyaXB0b3IgLS0gc2FmZVxudmFyICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xudmFyIEVOVU1FUkFCTEUgPSAnZW51bWVyYWJsZSc7XG52YXIgQ09ORklHVVJBQkxFID0gJ2NvbmZpZ3VyYWJsZSc7XG52YXIgV1JJVEFCTEUgPSAnd3JpdGFibGUnO1xuXG4vLyBgT2JqZWN0LmRlZmluZVByb3BlcnR5YCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LmRlZmluZXByb3BlcnR5XG5leHBvcnRzLmYgPSBERVNDUklQVE9SUyA/IFY4X1BST1RPVFlQRV9ERUZJTkVfQlVHID8gZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoTywgUCwgQXR0cmlidXRlcykge1xuICBhbk9iamVjdChPKTtcbiAgUCA9IHRvUHJvcGVydHlLZXkoUCk7XG4gIGFuT2JqZWN0KEF0dHJpYnV0ZXMpO1xuICBpZiAodHlwZW9mIE8gPT09ICdmdW5jdGlvbicgJiYgUCA9PT0gJ3Byb3RvdHlwZScgJiYgJ3ZhbHVlJyBpbiBBdHRyaWJ1dGVzICYmIFdSSVRBQkxFIGluIEF0dHJpYnV0ZXMgJiYgIUF0dHJpYnV0ZXNbV1JJVEFCTEVdKSB7XG4gICAgdmFyIGN1cnJlbnQgPSAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApO1xuICAgIGlmIChjdXJyZW50ICYmIGN1cnJlbnRbV1JJVEFCTEVdKSB7XG4gICAgICBPW1BdID0gQXR0cmlidXRlcy52YWx1ZTtcbiAgICAgIEF0dHJpYnV0ZXMgPSB7XG4gICAgICAgIGNvbmZpZ3VyYWJsZTogQ09ORklHVVJBQkxFIGluIEF0dHJpYnV0ZXMgPyBBdHRyaWJ1dGVzW0NPTkZJR1VSQUJMRV0gOiBjdXJyZW50W0NPTkZJR1VSQUJMRV0sXG4gICAgICAgIGVudW1lcmFibGU6IEVOVU1FUkFCTEUgaW4gQXR0cmlidXRlcyA/IEF0dHJpYnV0ZXNbRU5VTUVSQUJMRV0gOiBjdXJyZW50W0VOVU1FUkFCTEVdLFxuICAgICAgICB3cml0YWJsZTogZmFsc2VcbiAgICAgIH07XG4gICAgfVxuICB9IHJldHVybiAkZGVmaW5lUHJvcGVydHkoTywgUCwgQXR0cmlidXRlcyk7XG59IDogJGRlZmluZVByb3BlcnR5IDogZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoTywgUCwgQXR0cmlidXRlcykge1xuICBhbk9iamVjdChPKTtcbiAgUCA9IHRvUHJvcGVydHlLZXkoUCk7XG4gIGFuT2JqZWN0KEF0dHJpYnV0ZXMpO1xuICBpZiAoSUU4X0RPTV9ERUZJTkUpIHRyeSB7XG4gICAgcmV0dXJuICRkZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHsgLyogZW1wdHkgKi8gfVxuICBpZiAoJ2dldCcgaW4gQXR0cmlidXRlcyB8fCAnc2V0JyBpbiBBdHRyaWJ1dGVzKSB0aHJvdyBuZXcgJFR5cGVFcnJvcignQWNjZXNzb3JzIG5vdCBzdXBwb3J0ZWQnKTtcbiAgaWYgKCd2YWx1ZScgaW4gQXR0cmlidXRlcykgT1tQXSA9IEF0dHJpYnV0ZXMudmFsdWU7XG4gIHJldHVybiBPO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIGNhbGwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tY2FsbCcpO1xudmFyIHByb3BlcnR5SXNFbnVtZXJhYmxlTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1wcm9wZXJ0eS1pcy1lbnVtZXJhYmxlJyk7XG52YXIgY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NyZWF0ZS1wcm9wZXJ0eS1kZXNjcmlwdG9yJyk7XG52YXIgdG9JbmRleGVkT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWluZGV4ZWQtb2JqZWN0Jyk7XG52YXIgdG9Qcm9wZXJ0eUtleSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1wcm9wZXJ0eS1rZXknKTtcbnZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xudmFyIElFOF9ET01fREVGSU5FID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2llOC1kb20tZGVmaW5lJyk7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZ2V0b3ducHJvcGVydHlkZXNjcmlwdG9yIC0tIHNhZmVcbnZhciAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcblxuLy8gYE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QuZ2V0b3ducHJvcGVydHlkZXNjcmlwdG9yXG5leHBvcnRzLmYgPSBERVNDUklQVE9SUyA/ICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgOiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgUCkge1xuICBPID0gdG9JbmRleGVkT2JqZWN0KE8pO1xuICBQID0gdG9Qcm9wZXJ0eUtleShQKTtcbiAgaWYgKElFOF9ET01fREVGSU5FKSB0cnkge1xuICAgIHJldHVybiAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApO1xuICB9IGNhdGNoIChlcnJvcikgeyAvKiBlbXB0eSAqLyB9XG4gIGlmIChoYXNPd24oTywgUCkpIHJldHVybiBjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IoIWNhbGwocHJvcGVydHlJc0VudW1lcmFibGVNb2R1bGUuZiwgTywgUCksIE9bUF0pO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBpbnRlcm5hbE9iamVjdEtleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWtleXMtaW50ZXJuYWwnKTtcbnZhciBlbnVtQnVnS2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9lbnVtLWJ1Zy1rZXlzJyk7XG5cbnZhciBoaWRkZW5LZXlzID0gZW51bUJ1Z0tleXMuY29uY2F0KCdsZW5ndGgnLCAncHJvdG90eXBlJyk7XG5cbi8vIGBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lc2AgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5nZXRvd25wcm9wZXJ0eW5hbWVzXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWdldG93bnByb3BlcnR5bmFtZXMgLS0gc2FmZVxuZXhwb3J0cy5mID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMgfHwgZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhPKSB7XG4gIHJldHVybiBpbnRlcm5hbE9iamVjdEtleXMoTywgaGlkZGVuS2V5cyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1nZXRvd25wcm9wZXJ0eXN5bWJvbHMgLS0gc2FmZVxuZXhwb3J0cy5mID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSB1bmN1cnJ5VGhpcyh7fS5pc1Byb3RvdHlwZU9mKTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcbnZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xudmFyIHRvSW5kZXhlZE9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdCcpO1xudmFyIGluZGV4T2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYXJyYXktaW5jbHVkZXMnKS5pbmRleE9mO1xudmFyIGhpZGRlbktleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGlkZGVuLWtleXMnKTtcblxudmFyIHB1c2ggPSB1bmN1cnJ5VGhpcyhbXS5wdXNoKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqZWN0LCBuYW1lcykge1xuICB2YXIgTyA9IHRvSW5kZXhlZE9iamVjdChvYmplY3QpO1xuICB2YXIgaSA9IDA7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgdmFyIGtleTtcbiAgZm9yIChrZXkgaW4gTykgIWhhc093bihoaWRkZW5LZXlzLCBrZXkpICYmIGhhc093bihPLCBrZXkpICYmIHB1c2gocmVzdWx0LCBrZXkpO1xuICAvLyBEb24ndCBlbnVtIGJ1ZyAmIGhpZGRlbiBrZXlzXG4gIHdoaWxlIChuYW1lcy5sZW5ndGggPiBpKSBpZiAoaGFzT3duKE8sIGtleSA9IG5hbWVzW2krK10pKSB7XG4gICAgfmluZGV4T2YocmVzdWx0LCBrZXkpIHx8IHB1c2gocmVzdWx0LCBrZXkpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRwcm9wZXJ0eUlzRW51bWVyYWJsZSA9IHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1nZXRvd25wcm9wZXJ0eWRlc2NyaXB0b3IgLS0gc2FmZVxudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG5cbi8vIE5hc2hvcm4gfiBKREs4IGJ1Z1xudmFyIE5BU0hPUk5fQlVHID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yICYmICEkcHJvcGVydHlJc0VudW1lcmFibGUuY2FsbCh7IDE6IDIgfSwgMSk7XG5cbi8vIGBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlYCBtZXRob2QgaW1wbGVtZW50YXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eWlzZW51bWVyYWJsZVxuZXhwb3J0cy5mID0gTkFTSE9STl9CVUcgPyBmdW5jdGlvbiBwcm9wZXJ0eUlzRW51bWVyYWJsZShWKSB7XG4gIHZhciBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRoaXMsIFYpO1xuICByZXR1cm4gISFkZXNjcmlwdG9yICYmIGRlc2NyaXB0b3IuZW51bWVyYWJsZTtcbn0gOiAkcHJvcGVydHlJc0VudW1lcmFibGU7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgVE9fU1RSSU5HX1RBR19TVVBQT1JUID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXN0cmluZy10YWctc3VwcG9ydCcpO1xudmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2xhc3NvZicpO1xuXG4vLyBgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZ2AgbWV0aG9kIGltcGxlbWVudGF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5wcm90b3R5cGUudG9zdHJpbmdcbm1vZHVsZS5leHBvcnRzID0gVE9fU1RSSU5HX1RBR19TVVBQT1JUID8ge30udG9TdHJpbmcgOiBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgcmV0dXJuICdbb2JqZWN0ICcgKyBjbGFzc29mKHRoaXMpICsgJ10nO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBjYWxsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWNhbGwnKTtcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtb2JqZWN0Jyk7XG5cbnZhciAkVHlwZUVycm9yID0gVHlwZUVycm9yO1xuXG4vLyBgT3JkaW5hcnlUb1ByaW1pdGl2ZWAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9yZGluYXJ5dG9wcmltaXRpdmVcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGlucHV0LCBwcmVmKSB7XG4gIHZhciBmbiwgdmFsO1xuICBpZiAocHJlZiA9PT0gJ3N0cmluZycgJiYgaXNDYWxsYWJsZShmbiA9IGlucHV0LnRvU3RyaW5nKSAmJiAhaXNPYmplY3QodmFsID0gY2FsbChmbiwgaW5wdXQpKSkgcmV0dXJuIHZhbDtcbiAgaWYgKGlzQ2FsbGFibGUoZm4gPSBpbnB1dC52YWx1ZU9mKSAmJiAhaXNPYmplY3QodmFsID0gY2FsbChmbiwgaW5wdXQpKSkgcmV0dXJuIHZhbDtcbiAgaWYgKHByZWYgIT09ICdzdHJpbmcnICYmIGlzQ2FsbGFibGUoZm4gPSBpbnB1dC50b1N0cmluZykgJiYgIWlzT2JqZWN0KHZhbCA9IGNhbGwoZm4sIGlucHV0KSkpIHJldHVybiB2YWw7XG4gIHRocm93IG5ldyAkVHlwZUVycm9yKFwiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlXCIpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnZXRCdWlsdEluID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dldC1idWlsdC1pbicpO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcycpO1xudmFyIGdldE93blByb3BlcnR5TmFtZXNNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktbmFtZXMnKTtcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHNNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktc3ltYm9scycpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FuLW9iamVjdCcpO1xuXG52YXIgY29uY2F0ID0gdW5jdXJyeVRoaXMoW10uY29uY2F0KTtcblxuLy8gYWxsIG9iamVjdCBrZXlzLCBpbmNsdWRlcyBub24tZW51bWVyYWJsZSBhbmQgc3ltYm9sc1xubW9kdWxlLmV4cG9ydHMgPSBnZXRCdWlsdEluKCdSZWZsZWN0JywgJ293bktleXMnKSB8fCBmdW5jdGlvbiBvd25LZXlzKGl0KSB7XG4gIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lc01vZHVsZS5mKGFuT2JqZWN0KGl0KSk7XG4gIHZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHNNb2R1bGUuZjtcbiAgcmV0dXJuIGdldE93blByb3BlcnR5U3ltYm9scyA/IGNvbmNhdChrZXlzLCBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoaXQpKSA6IGtleXM7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FuLW9iamVjdCcpO1xuXG4vLyBgUmVnRXhwLnByb3RvdHlwZS5mbGFnc2AgZ2V0dGVyIGltcGxlbWVudGF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWdldC1yZWdleHAucHJvdG90eXBlLmZsYWdzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHRoYXQgPSBhbk9iamVjdCh0aGlzKTtcbiAgdmFyIHJlc3VsdCA9ICcnO1xuICBpZiAodGhhdC5oYXNJbmRpY2VzKSByZXN1bHQgKz0gJ2QnO1xuICBpZiAodGhhdC5nbG9iYWwpIHJlc3VsdCArPSAnZyc7XG4gIGlmICh0aGF0Lmlnbm9yZUNhc2UpIHJlc3VsdCArPSAnaSc7XG4gIGlmICh0aGF0Lm11bHRpbGluZSkgcmVzdWx0ICs9ICdtJztcbiAgaWYgKHRoYXQuZG90QWxsKSByZXN1bHQgKz0gJ3MnO1xuICBpZiAodGhhdC51bmljb2RlKSByZXN1bHQgKz0gJ3UnO1xuICBpZiAodGhhdC51bmljb2RlU2V0cykgcmVzdWx0ICs9ICd2JztcbiAgaWYgKHRoYXQuc3RpY2t5KSByZXN1bHQgKz0gJ3knO1xuICByZXR1cm4gcmVzdWx0O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBjYWxsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWNhbGwnKTtcbnZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xudmFyIGlzUHJvdG90eXBlT2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWlzLXByb3RvdHlwZS1vZicpO1xudmFyIHJlZ0V4cEZsYWdzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZ2V4cC1mbGFncycpO1xuXG52YXIgUmVnRXhwUHJvdG90eXBlID0gUmVnRXhwLnByb3RvdHlwZTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoUikge1xuICB2YXIgZmxhZ3MgPSBSLmZsYWdzO1xuICByZXR1cm4gZmxhZ3MgPT09IHVuZGVmaW5lZCAmJiAhKCdmbGFncycgaW4gUmVnRXhwUHJvdG90eXBlKSAmJiAhaGFzT3duKFIsICdmbGFncycpICYmIGlzUHJvdG90eXBlT2YoUmVnRXhwUHJvdG90eXBlLCBSKVxuICAgID8gY2FsbChyZWdFeHBGbGFncywgUikgOiBmbGFncztcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgaXNOdWxsT3JVbmRlZmluZWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtbnVsbC1vci11bmRlZmluZWQnKTtcblxudmFyICRUeXBlRXJyb3IgPSBUeXBlRXJyb3I7XG5cbi8vIGBSZXF1aXJlT2JqZWN0Q29lcmNpYmxlYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtcmVxdWlyZW9iamVjdGNvZXJjaWJsZVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKGlzTnVsbE9yVW5kZWZpbmVkKGl0KSkgdGhyb3cgbmV3ICRUeXBlRXJyb3IoXCJDYW4ndCBjYWxsIG1ldGhvZCBvbiBcIiArIGl0KTtcbiAgcmV0dXJuIGl0O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgYXBwbHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tYXBwbHknKTtcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgRU5HSU5FX0lTX0JVTiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9lbmdpbmUtaXMtYnVuJyk7XG52YXIgVVNFUl9BR0VOVCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9lbmdpbmUtdXNlci1hZ2VudCcpO1xudmFyIGFycmF5U2xpY2UgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYXJyYXktc2xpY2UnKTtcbnZhciB2YWxpZGF0ZUFyZ3VtZW50c0xlbmd0aCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy92YWxpZGF0ZS1hcmd1bWVudHMtbGVuZ3RoJyk7XG5cbnZhciBGdW5jdGlvbiA9IGdsb2JhbC5GdW5jdGlvbjtcbi8vIGRpcnR5IElFOS0gYW5kIEJ1biAwLjMuMC0gY2hlY2tzXG52YXIgV1JBUCA9IC9NU0lFIC5cXC4vLnRlc3QoVVNFUl9BR0VOVCkgfHwgRU5HSU5FX0lTX0JVTiAmJiAoZnVuY3Rpb24gKCkge1xuICB2YXIgdmVyc2lvbiA9IGdsb2JhbC5CdW4udmVyc2lvbi5zcGxpdCgnLicpO1xuICByZXR1cm4gdmVyc2lvbi5sZW5ndGggPCAzIHx8IHZlcnNpb25bMF0gPT09ICcwJyAmJiAodmVyc2lvblsxXSA8IDMgfHwgdmVyc2lvblsxXSA9PT0gJzMnICYmIHZlcnNpb25bMl0gPT09ICcwJyk7XG59KSgpO1xuXG4vLyBJRTktIC8gQnVuIDAuMy4wLSBzZXRUaW1lb3V0IC8gc2V0SW50ZXJ2YWwgLyBzZXRJbW1lZGlhdGUgYWRkaXRpb25hbCBwYXJhbWV0ZXJzIGZpeFxuLy8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvdGltZXJzLWFuZC11c2VyLXByb21wdHMuaHRtbCN0aW1lcnNcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9vdmVuLXNoL2J1bi9pc3N1ZXMvMTYzM1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoc2NoZWR1bGVyLCBoYXNUaW1lQXJnKSB7XG4gIHZhciBmaXJzdFBhcmFtSW5kZXggPSBoYXNUaW1lQXJnID8gMiA6IDE7XG4gIHJldHVybiBXUkFQID8gZnVuY3Rpb24gKGhhbmRsZXIsIHRpbWVvdXQgLyogLCAuLi5hcmd1bWVudHMgKi8pIHtcbiAgICB2YXIgYm91bmRBcmdzID0gdmFsaWRhdGVBcmd1bWVudHNMZW5ndGgoYXJndW1lbnRzLmxlbmd0aCwgMSkgPiBmaXJzdFBhcmFtSW5kZXg7XG4gICAgdmFyIGZuID0gaXNDYWxsYWJsZShoYW5kbGVyKSA/IGhhbmRsZXIgOiBGdW5jdGlvbihoYW5kbGVyKTtcbiAgICB2YXIgcGFyYW1zID0gYm91bmRBcmdzID8gYXJyYXlTbGljZShhcmd1bWVudHMsIGZpcnN0UGFyYW1JbmRleCkgOiBbXTtcbiAgICB2YXIgY2FsbGJhY2sgPSBib3VuZEFyZ3MgPyBmdW5jdGlvbiAoKSB7XG4gICAgICBhcHBseShmbiwgdGhpcywgcGFyYW1zKTtcbiAgICB9IDogZm47XG4gICAgcmV0dXJuIGhhc1RpbWVBcmcgPyBzY2hlZHVsZXIoY2FsbGJhY2ssIHRpbWVvdXQpIDogc2NoZWR1bGVyKGNhbGxiYWNrKTtcbiAgfSA6IHNjaGVkdWxlcjtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgc2hhcmVkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NoYXJlZCcpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy91aWQnKTtcblxudmFyIGtleXMgPSBzaGFyZWQoJ2tleXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIHJldHVybiBrZXlzW2tleV0gfHwgKGtleXNba2V5XSA9IHVpZChrZXkpKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIGRlZmluZUdsb2JhbFByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RlZmluZS1nbG9iYWwtcHJvcGVydHknKTtcblxudmFyIFNIQVJFRCA9ICdfX2NvcmUtanNfc2hhcmVkX18nO1xudmFyIHN0b3JlID0gZ2xvYmFsW1NIQVJFRF0gfHwgZGVmaW5lR2xvYmFsUHJvcGVydHkoU0hBUkVELCB7fSk7XG5cbm1vZHVsZS5leHBvcnRzID0gc3RvcmU7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgSVNfUFVSRSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1wdXJlJyk7XG52YXIgc3RvcmUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2hhcmVkLXN0b3JlJyk7XG5cbihtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gIHJldHVybiBzdG9yZVtrZXldIHx8IChzdG9yZVtrZXldID0gdmFsdWUgIT09IHVuZGVmaW5lZCA/IHZhbHVlIDoge30pO1xufSkoJ3ZlcnNpb25zJywgW10pLnB1c2goe1xuICB2ZXJzaW9uOiAnMy4zNS4xJyxcbiAgbW9kZTogSVNfUFVSRSA/ICdwdXJlJyA6ICdnbG9iYWwnLFxuICBjb3B5cmlnaHQ6ICfCqSAyMDE0LTIwMjQgRGVuaXMgUHVzaGthcmV2ICh6bG9pcm9jay5ydSknLFxuICBsaWNlbnNlOiAnaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvYmxvYi92My4zNS4xL0xJQ0VOU0UnLFxuICBzb3VyY2U6ICdodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcydcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgZXMvbm8tc3ltYm9sIC0tIHJlcXVpcmVkIGZvciB0ZXN0aW5nICovXG52YXIgVjhfVkVSU0lPTiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9lbmdpbmUtdjgtdmVyc2lvbicpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xuXG52YXIgJFN0cmluZyA9IGdsb2JhbC5TdHJpbmc7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZ2V0b3ducHJvcGVydHlzeW1ib2xzIC0tIHJlcXVpcmVkIGZvciB0ZXN0aW5nXG5tb2R1bGUuZXhwb3J0cyA9ICEhT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyAmJiAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICB2YXIgc3ltYm9sID0gU3ltYm9sKCdzeW1ib2wgZGV0ZWN0aW9uJyk7XG4gIC8vIENocm9tZSAzOCBTeW1ib2wgaGFzIGluY29ycmVjdCB0b1N0cmluZyBjb252ZXJzaW9uXG4gIC8vIGBnZXQtb3duLXByb3BlcnR5LXN5bWJvbHNgIHBvbHlmaWxsIHN5bWJvbHMgY29udmVydGVkIHRvIG9iamVjdCBhcmUgbm90IFN5bWJvbCBpbnN0YW5jZXNcbiAgLy8gbmI6IERvIG5vdCBjYWxsIGBTdHJpbmdgIGRpcmVjdGx5IHRvIGF2b2lkIHRoaXMgYmVpbmcgb3B0aW1pemVkIG91dCB0byBgc3ltYm9sKycnYCB3aGljaCB3aWxsLFxuICAvLyBvZiBjb3Vyc2UsIGZhaWwuXG4gIHJldHVybiAhJFN0cmluZyhzeW1ib2wpIHx8ICEoT2JqZWN0KHN5bWJvbCkgaW5zdGFuY2VvZiBTeW1ib2wpIHx8XG4gICAgLy8gQ2hyb21lIDM4LTQwIHN5bWJvbHMgYXJlIG5vdCBpbmhlcml0ZWQgZnJvbSBET00gY29sbGVjdGlvbnMgcHJvdG90eXBlcyB0byBpbnN0YW5jZXNcbiAgICAhU3ltYm9sLnNoYW0gJiYgVjhfVkVSU0lPTiAmJiBWOF9WRVJTSU9OIDwgNDE7XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB0b0ludGVnZXJPckluZmluaXR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWludGVnZXItb3ItaW5maW5pdHknKTtcblxudmFyIG1heCA9IE1hdGgubWF4O1xudmFyIG1pbiA9IE1hdGgubWluO1xuXG4vLyBIZWxwZXIgZm9yIGEgcG9wdWxhciByZXBlYXRpbmcgY2FzZSBvZiB0aGUgc3BlYzpcbi8vIExldCBpbnRlZ2VyIGJlID8gVG9JbnRlZ2VyKGluZGV4KS5cbi8vIElmIGludGVnZXIgPCAwLCBsZXQgcmVzdWx0IGJlIG1heCgobGVuZ3RoICsgaW50ZWdlciksIDApOyBlbHNlIGxldCByZXN1bHQgYmUgbWluKGludGVnZXIsIGxlbmd0aCkuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpbmRleCwgbGVuZ3RoKSB7XG4gIHZhciBpbnRlZ2VyID0gdG9JbnRlZ2VyT3JJbmZpbml0eShpbmRleCk7XG4gIHJldHVybiBpbnRlZ2VyIDwgMCA/IG1heChpbnRlZ2VyICsgbGVuZ3RoLCAwKSA6IG1pbihpbnRlZ2VyLCBsZW5ndGgpO1xufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIHRvT2JqZWN0IHdpdGggZmFsbGJhY2sgZm9yIG5vbi1hcnJheS1saWtlIEVTMyBzdHJpbmdzXG52YXIgSW5kZXhlZE9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbmRleGVkLW9iamVjdCcpO1xudmFyIHJlcXVpcmVPYmplY3RDb2VyY2libGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVxdWlyZS1vYmplY3QtY29lcmNpYmxlJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBJbmRleGVkT2JqZWN0KHJlcXVpcmVPYmplY3RDb2VyY2libGUoaXQpKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdHJ1bmMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvbWF0aC10cnVuYycpO1xuXG4vLyBgVG9JbnRlZ2VyT3JJbmZpbml0eWAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXRvaW50ZWdlcm9yaW5maW5pdHlcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIHZhciBudW1iZXIgPSArYXJndW1lbnQ7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmUgLS0gTmFOIGNoZWNrXG4gIHJldHVybiBudW1iZXIgIT09IG51bWJlciB8fCBudW1iZXIgPT09IDAgPyAwIDogdHJ1bmMobnVtYmVyKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdG9JbnRlZ2VyT3JJbmZpbml0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1pbnRlZ2VyLW9yLWluZmluaXR5Jyk7XG5cbnZhciBtaW4gPSBNYXRoLm1pbjtcblxuLy8gYFRvTGVuZ3RoYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtdG9sZW5ndGhcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIHZhciBsZW4gPSB0b0ludGVnZXJPckluZmluaXR5KGFyZ3VtZW50KTtcbiAgcmV0dXJuIGxlbiA+IDAgPyBtaW4obGVuLCAweDFGRkZGRkZGRkZGRkZGKSA6IDA7IC8vIDIgKiogNTMgLSAxID09IDkwMDcxOTkyNTQ3NDA5OTFcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgcmVxdWlyZU9iamVjdENvZXJjaWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGUnKTtcblxudmFyICRPYmplY3QgPSBPYmplY3Q7XG5cbi8vIGBUb09iamVjdGAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXRvb2JqZWN0XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICByZXR1cm4gJE9iamVjdChyZXF1aXJlT2JqZWN0Q29lcmNpYmxlKGFyZ3VtZW50KSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNhbGwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tY2FsbCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW9iamVjdCcpO1xudmFyIGlzU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLXN5bWJvbCcpO1xudmFyIGdldE1ldGhvZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nZXQtbWV0aG9kJyk7XG52YXIgb3JkaW5hcnlUb1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vcmRpbmFyeS10by1wcmltaXRpdmUnKTtcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcblxudmFyICRUeXBlRXJyb3IgPSBUeXBlRXJyb3I7XG52YXIgVE9fUFJJTUlUSVZFID0gd2VsbEtub3duU3ltYm9sKCd0b1ByaW1pdGl2ZScpO1xuXG4vLyBgVG9QcmltaXRpdmVgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy10b3ByaW1pdGl2ZVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaW5wdXQsIHByZWYpIHtcbiAgaWYgKCFpc09iamVjdChpbnB1dCkgfHwgaXNTeW1ib2woaW5wdXQpKSByZXR1cm4gaW5wdXQ7XG4gIHZhciBleG90aWNUb1ByaW0gPSBnZXRNZXRob2QoaW5wdXQsIFRPX1BSSU1JVElWRSk7XG4gIHZhciByZXN1bHQ7XG4gIGlmIChleG90aWNUb1ByaW0pIHtcbiAgICBpZiAocHJlZiA9PT0gdW5kZWZpbmVkKSBwcmVmID0gJ2RlZmF1bHQnO1xuICAgIHJlc3VsdCA9IGNhbGwoZXhvdGljVG9QcmltLCBpbnB1dCwgcHJlZik7XG4gICAgaWYgKCFpc09iamVjdChyZXN1bHQpIHx8IGlzU3ltYm9sKHJlc3VsdCkpIHJldHVybiByZXN1bHQ7XG4gICAgdGhyb3cgbmV3ICRUeXBlRXJyb3IoXCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWVcIik7XG4gIH1cbiAgaWYgKHByZWYgPT09IHVuZGVmaW5lZCkgcHJlZiA9ICdudW1iZXInO1xuICByZXR1cm4gb3JkaW5hcnlUb1ByaW1pdGl2ZShpbnB1dCwgcHJlZik7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXByaW1pdGl2ZScpO1xudmFyIGlzU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLXN5bWJvbCcpO1xuXG4vLyBgVG9Qcm9wZXJ0eUtleWAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXRvcHJvcGVydHlrZXlcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIHZhciBrZXkgPSB0b1ByaW1pdGl2ZShhcmd1bWVudCwgJ3N0cmluZycpO1xuICByZXR1cm4gaXNTeW1ib2woa2V5KSA/IGtleSA6IGtleSArICcnO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcblxudmFyIFRPX1NUUklOR19UQUcgPSB3ZWxsS25vd25TeW1ib2woJ3RvU3RyaW5nVGFnJyk7XG52YXIgdGVzdCA9IHt9O1xuXG50ZXN0W1RPX1NUUklOR19UQUddID0gJ3onO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFN0cmluZyh0ZXN0KSA9PT0gJ1tvYmplY3Qgel0nO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2xhc3NvZicpO1xuXG52YXIgJFN0cmluZyA9IFN0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYXJndW1lbnQpIHtcbiAgaWYgKGNsYXNzb2YoYXJndW1lbnQpID09PSAnU3ltYm9sJykgdGhyb3cgbmV3IFR5cGVFcnJvcignQ2Fubm90IGNvbnZlcnQgYSBTeW1ib2wgdmFsdWUgdG8gYSBzdHJpbmcnKTtcbiAgcmV0dXJuICRTdHJpbmcoYXJndW1lbnQpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkU3RyaW5nID0gU3RyaW5nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICB0cnkge1xuICAgIHJldHVybiAkU3RyaW5nKGFyZ3VtZW50KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gJ09iamVjdCc7XG4gIH1cbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG5cbnZhciBpZCA9IDA7XG52YXIgcG9zdGZpeCA9IE1hdGgucmFuZG9tKCk7XG52YXIgdG9TdHJpbmcgPSB1bmN1cnJ5VGhpcygxLjAudG9TdHJpbmcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgcmV0dXJuICdTeW1ib2woJyArIChrZXkgPT09IHVuZGVmaW5lZCA/ICcnIDoga2V5KSArICcpXycgKyB0b1N0cmluZygrK2lkICsgcG9zdGZpeCwgMzYpO1xufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIGVzL25vLXN5bWJvbCAtLSByZXF1aXJlZCBmb3IgdGVzdGluZyAqL1xudmFyIE5BVElWRV9TWU1CT0wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc3ltYm9sLWNvbnN0cnVjdG9yLWRldGVjdGlvbicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE5BVElWRV9TWU1CT0xcbiAgJiYgIVN5bWJvbC5zaGFtXG4gICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT0gJ3N5bWJvbCc7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnMnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xuXG4vLyBWOCB+IENocm9tZSAzNi1cbi8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMzMzRcbm1vZHVsZS5leHBvcnRzID0gREVTQ1JJUFRPUlMgJiYgZmFpbHMoZnVuY3Rpb24gKCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWRlZmluZXByb3BlcnR5IC0tIHJlcXVpcmVkIGZvciB0ZXN0aW5nXG4gIHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9LCAncHJvdG90eXBlJywge1xuICAgIHZhbHVlOiA0MixcbiAgICB3cml0YWJsZTogZmFsc2VcbiAgfSkucHJvdG90eXBlICE9PSA0Mjtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRUeXBlRXJyb3IgPSBUeXBlRXJyb3I7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHBhc3NlZCwgcmVxdWlyZWQpIHtcbiAgaWYgKHBhc3NlZCA8IHJlcXVpcmVkKSB0aHJvdyBuZXcgJFR5cGVFcnJvcignTm90IGVub3VnaCBhcmd1bWVudHMnKTtcbiAgcmV0dXJuIHBhc3NlZDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcblxudmFyIFdlYWtNYXAgPSBnbG9iYWwuV2Vha01hcDtcblxubW9kdWxlLmV4cG9ydHMgPSBpc0NhbGxhYmxlKFdlYWtNYXApICYmIC9uYXRpdmUgY29kZS8udGVzdChTdHJpbmcoV2Vha01hcCkpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBzaGFyZWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2hhcmVkJyk7XG52YXIgaGFzT3duID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hhcy1vd24tcHJvcGVydHknKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdWlkJyk7XG52YXIgTkFUSVZFX1NZTUJPTCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zeW1ib2wtY29uc3RydWN0b3ItZGV0ZWN0aW9uJyk7XG52YXIgVVNFX1NZTUJPTF9BU19VSUQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdXNlLXN5bWJvbC1hcy11aWQnKTtcblxudmFyIFN5bWJvbCA9IGdsb2JhbC5TeW1ib2w7XG52YXIgV2VsbEtub3duU3ltYm9sc1N0b3JlID0gc2hhcmVkKCd3a3MnKTtcbnZhciBjcmVhdGVXZWxsS25vd25TeW1ib2wgPSBVU0VfU1lNQk9MX0FTX1VJRCA/IFN5bWJvbFsnZm9yJ10gfHwgU3ltYm9sIDogU3ltYm9sICYmIFN5bWJvbC53aXRob3V0U2V0dGVyIHx8IHVpZDtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobmFtZSkge1xuICBpZiAoIWhhc093bihXZWxsS25vd25TeW1ib2xzU3RvcmUsIG5hbWUpKSB7XG4gICAgV2VsbEtub3duU3ltYm9sc1N0b3JlW25hbWVdID0gTkFUSVZFX1NZTUJPTCAmJiBoYXNPd24oU3ltYm9sLCBuYW1lKVxuICAgICAgPyBTeW1ib2xbbmFtZV1cbiAgICAgIDogY3JlYXRlV2VsbEtub3duU3ltYm9sKCdTeW1ib2wuJyArIG5hbWUpO1xuICB9IHJldHVybiBXZWxsS25vd25TeW1ib2xzU3RvcmVbbmFtZV07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gVE9ETzogUmVtb3ZlIGZyb20gYGNvcmUtanNANGBcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcbnZhciBkZWZpbmVCdWlsdEluID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RlZmluZS1idWlsdC1pbicpO1xuXG52YXIgRGF0ZVByb3RvdHlwZSA9IERhdGUucHJvdG90eXBlO1xudmFyIElOVkFMSURfREFURSA9ICdJbnZhbGlkIERhdGUnO1xudmFyIFRPX1NUUklORyA9ICd0b1N0cmluZyc7XG52YXIgbmF0aXZlRGF0ZVRvU3RyaW5nID0gdW5jdXJyeVRoaXMoRGF0ZVByb3RvdHlwZVtUT19TVFJJTkddKTtcbnZhciB0aGlzVGltZVZhbHVlID0gdW5jdXJyeVRoaXMoRGF0ZVByb3RvdHlwZS5nZXRUaW1lKTtcblxuLy8gYERhdGUucHJvdG90eXBlLnRvU3RyaW5nYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtZGF0ZS5wcm90b3R5cGUudG9zdHJpbmdcbmlmIChTdHJpbmcobmV3IERhdGUoTmFOKSkgIT09IElOVkFMSURfREFURSkge1xuICBkZWZpbmVCdWlsdEluKERhdGVQcm90b3R5cGUsIFRPX1NUUklORywgZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgdmFyIHZhbHVlID0gdGhpc1RpbWVWYWx1ZSh0aGlzKTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlIC0tIE5hTiBjaGVja1xuICAgIHJldHVybiB2YWx1ZSA9PT0gdmFsdWUgPyBuYXRpdmVEYXRlVG9TdHJpbmcodGhpcykgOiBJTlZBTElEX0RBVEU7XG4gIH0pO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIFRPX1NUUklOR19UQUdfU1VQUE9SVCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1zdHJpbmctdGFnLXN1cHBvcnQnKTtcbnZhciBkZWZpbmVCdWlsdEluID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RlZmluZS1idWlsdC1pbicpO1xudmFyIHRvU3RyaW5nID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC10by1zdHJpbmcnKTtcblxuLy8gYE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmdgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QucHJvdG90eXBlLnRvc3RyaW5nXG5pZiAoIVRPX1NUUklOR19UQUdfU1VQUE9SVCkge1xuICBkZWZpbmVCdWlsdEluKE9iamVjdC5wcm90b3R5cGUsICd0b1N0cmluZycsIHRvU3RyaW5nLCB7IHVuc2FmZTogdHJ1ZSB9KTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcbnZhciBQUk9QRVJfRlVOQ1RJT05fTkFNRSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1uYW1lJykuUFJPUEVSO1xudmFyIGRlZmluZUJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVmaW5lLWJ1aWx0LWluJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4tb2JqZWN0Jyk7XG52YXIgJHRvU3RyaW5nID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXN0cmluZycpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgZ2V0UmVnRXhwRmxhZ3MgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLWdldC1mbGFncycpO1xuXG52YXIgVE9fU1RSSU5HID0gJ3RvU3RyaW5nJztcbnZhciBSZWdFeHBQcm90b3R5cGUgPSBSZWdFeHAucHJvdG90eXBlO1xudmFyIG5hdGl2ZVRvU3RyaW5nID0gUmVnRXhwUHJvdG90eXBlW1RPX1NUUklOR107XG5cbnZhciBOT1RfR0VORVJJQyA9IGZhaWxzKGZ1bmN0aW9uICgpIHsgcmV0dXJuIG5hdGl2ZVRvU3RyaW5nLmNhbGwoeyBzb3VyY2U6ICdhJywgZmxhZ3M6ICdiJyB9KSAhPT0gJy9hL2InOyB9KTtcbi8vIEZGNDQtIFJlZ0V4cCN0b1N0cmluZyBoYXMgYSB3cm9uZyBuYW1lXG52YXIgSU5DT1JSRUNUX05BTUUgPSBQUk9QRVJfRlVOQ1RJT05fTkFNRSAmJiBuYXRpdmVUb1N0cmluZy5uYW1lICE9PSBUT19TVFJJTkc7XG5cbi8vIGBSZWdFeHAucHJvdG90eXBlLnRvU3RyaW5nYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS50b3N0cmluZ1xuaWYgKE5PVF9HRU5FUklDIHx8IElOQ09SUkVDVF9OQU1FKSB7XG4gIGRlZmluZUJ1aWx0SW4oUmVnRXhwUHJvdG90eXBlLCBUT19TVFJJTkcsIGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHZhciBSID0gYW5PYmplY3QodGhpcyk7XG4gICAgdmFyIHBhdHRlcm4gPSAkdG9TdHJpbmcoUi5zb3VyY2UpO1xuICAgIHZhciBmbGFncyA9ICR0b1N0cmluZyhnZXRSZWdFeHBGbGFncyhSKSk7XG4gICAgcmV0dXJuICcvJyArIHBhdHRlcm4gKyAnLycgKyBmbGFncztcbiAgfSwgeyB1bnNhZmU6IHRydWUgfSk7XG59XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgc2NoZWR1bGVyc0ZpeCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zY2hlZHVsZXJzLWZpeCcpO1xuXG52YXIgc2V0SW50ZXJ2YWwgPSBzY2hlZHVsZXJzRml4KGdsb2JhbC5zZXRJbnRlcnZhbCwgdHJ1ZSk7XG5cbi8vIEJ1biAvIElFOS0gc2V0SW50ZXJ2YWwgYWRkaXRpb25hbCBwYXJhbWV0ZXJzIGZpeFxuLy8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvdGltZXJzLWFuZC11c2VyLXByb21wdHMuaHRtbCNkb20tc2V0aW50ZXJ2YWxcbiQoeyBnbG9iYWw6IHRydWUsIGJpbmQ6IHRydWUsIGZvcmNlZDogZ2xvYmFsLnNldEludGVydmFsICE9PSBzZXRJbnRlcnZhbCB9LCB7XG4gIHNldEludGVydmFsOiBzZXRJbnRlcnZhbFxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgc2NoZWR1bGVyc0ZpeCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zY2hlZHVsZXJzLWZpeCcpO1xuXG52YXIgc2V0VGltZW91dCA9IHNjaGVkdWxlcnNGaXgoZ2xvYmFsLnNldFRpbWVvdXQsIHRydWUpO1xuXG4vLyBCdW4gLyBJRTktIHNldFRpbWVvdXQgYWRkaXRpb25hbCBwYXJhbWV0ZXJzIGZpeFxuLy8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvdGltZXJzLWFuZC11c2VyLXByb21wdHMuaHRtbCNkb20tc2V0dGltZW91dFxuJCh7IGdsb2JhbDogdHJ1ZSwgYmluZDogdHJ1ZSwgZm9yY2VkOiBnbG9iYWwuc2V0VGltZW91dCAhPT0gc2V0VGltZW91dCB9LCB7XG4gIHNldFRpbWVvdXQ6IHNldFRpbWVvdXRcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gVE9ETzogUmVtb3ZlIHRoaXMgbW9kdWxlIGZyb20gYGNvcmUtanNANGAgc2luY2UgaXQncyBzcGxpdCB0byBtb2R1bGVzIGxpc3RlZCBiZWxvd1xucmVxdWlyZSgnLi4vbW9kdWxlcy93ZWIuc2V0LWludGVydmFsJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL3dlYi5zZXQtdGltZW91dCcpO1xuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjO1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHtcblx0XHRcdHZhciBpID0gc2NyaXB0cy5sZW5ndGggLSAxO1xuXHRcdFx0d2hpbGUgKGkgPiAtMSAmJiAhc2NyaXB0VXJsKSBzY3JpcHRVcmwgPSBzY3JpcHRzW2ktLV0uc3JjO1xuXHRcdH1cblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiaW1wb3J0IGltZ0dvYmxpbiBmcm9tICcuLi9pbWcvZ29ibGluLnBuZyc7XG5cbmxldCBjdXJySG9sZUdvYmxpbjtcbmxldCBudW0gPSBudWxsO1xuXG5mdW5jdGlvbiBnZXRSYW5kb21Ib2xlKHByZXZOdW0pIHtcbiAgY29uc3QgY2VsbCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDE2KS50b1N0cmluZygpO1xuICBpZiAocHJldk51bSA9PT0gbnVsbCB8fCBwcmV2TnVtICE9PSBjZWxsKSB7XG4gICAgcmV0dXJuIGNlbGw7XG4gIH1cbiAgcmV0dXJuIGdldFJhbmRvbUhvbGUoY2VsbCk7XG59XG5cbmZ1bmN0aW9uIHNldEdvYmxpbigpIHtcbiAgaWYgKGN1cnJIb2xlR29ibGluKSB7XG4gICAgY3VyckhvbGVHb2JsaW4uaW5uZXJIVE1MID0gJyc7XG4gIH1cblxuICBjb25zdCBnb2JsaW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbiAgZ29ibGluLnNyYyA9IGltZ0dvYmxpbjtcblxuICBudW0gPSBnZXRSYW5kb21Ib2xlKG51bSk7XG4gIGN1cnJIb2xlR29ibGluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobnVtKTtcbiAgY3VyckhvbGVHb2JsaW4uYXBwZW5kQ2hpbGQoZ29ibGluKTtcbn1cblxuZnVuY3Rpb24gc2V0R2FtZSgpIHtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCAxNjsgaSArPSAxKSB7XG4gICAgY29uc3QgaG9sZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGhvbGUuaWQgPSBpLnRvU3RyaW5nKCk7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dhbWUtYm9hcmQnKS5hcHBlbmRDaGlsZChob2xlKTtcbiAgfVxuXG4gIHNldEludGVydmFsKHNldEdvYmxpbiwgMjAwMCk7XG59XG5cbndpbmRvdy5vbmxvYWQgPSAoKSA9PiB7XG4gIHNldEdhbWUoKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHsgZ2V0UmFuZG9tSG9sZSB9O1xuIl0sIm5hbWVzIjpbImlzQ2FsbGFibGUiLCJ0cnlUb1N0cmluZyIsIiRUeXBlRXJyb3IiLCJUeXBlRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIiwiYXJndW1lbnQiLCJpc09iamVjdCIsIiRTdHJpbmciLCJTdHJpbmciLCJ0b0luZGV4ZWRPYmplY3QiLCJ0b0Fic29sdXRlSW5kZXgiLCJsZW5ndGhPZkFycmF5TGlrZSIsImNyZWF0ZU1ldGhvZCIsIklTX0lOQ0xVREVTIiwiJHRoaXMiLCJlbCIsImZyb21JbmRleCIsInZhbHVlIiwiTyIsImxlbmd0aCIsImluZGV4IiwiaW5jbHVkZXMiLCJpbmRleE9mIiwidW5jdXJyeVRoaXMiLCJzbGljZSIsInRvU3RyaW5nIiwic3RyaW5nU2xpY2UiLCJpdCIsIlRPX1NUUklOR19UQUdfU1VQUE9SVCIsImNsYXNzb2ZSYXciLCJUT19TVFJJTkdfVEFHIiwid2VsbEtub3duU3ltYm9sIiwiJE9iamVjdCIsIk9iamVjdCIsIkNPUlJFQ1RfQVJHVU1FTlRTIiwiYXJndW1lbnRzIiwidGFnIiwicmVzdWx0IiwidW5kZWZpbmVkIiwia2V5IiwiZXJyb3IiLCJ0cnlHZXQiLCJjYWxsZWUiLCJoYXNPd24iLCJvd25LZXlzIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yTW9kdWxlIiwiZGVmaW5lUHJvcGVydHlNb2R1bGUiLCJ0YXJnZXQiLCJzb3VyY2UiLCJleGNlcHRpb25zIiwia2V5cyIsImRlZmluZVByb3BlcnR5IiwiZiIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImkiLCJERVNDUklQVE9SUyIsImNyZWF0ZVByb3BlcnR5RGVzY3JpcHRvciIsIm9iamVjdCIsImJpdG1hcCIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIm1ha2VCdWlsdEluIiwiZGVmaW5lR2xvYmFsUHJvcGVydHkiLCJvcHRpb25zIiwic2ltcGxlIiwibmFtZSIsImdsb2JhbCIsInVuc2FmZSIsIm5vbkNvbmZpZ3VyYWJsZSIsIm5vbldyaXRhYmxlIiwiZmFpbHMiLCJnZXQiLCJkb2N1bWVudCIsIkVYSVNUUyIsImNyZWF0ZUVsZW1lbnQiLCJCdW4iLCJ2ZXJzaW9uIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwibWF0Y2giLCJwcm9jZXNzIiwiRGVubyIsInZlcnNpb25zIiwidjgiLCJzcGxpdCIsImNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eSIsImRlZmluZUJ1aWx0SW4iLCJjb3B5Q29uc3RydWN0b3JQcm9wZXJ0aWVzIiwiaXNGb3JjZWQiLCJ0YXJnZXRQcm9wZXJ0eSIsInNvdXJjZVByb3BlcnR5IiwiZGVzY3JpcHRvciIsIlRBUkdFVCIsIkdMT0JBTCIsIlNUQVRJQyIsInN0YXQiLCJwcm90b3R5cGUiLCJkb250Q2FsbEdldFNldCIsImZvcmNlZCIsInNoYW0iLCJleGVjIiwiTkFUSVZFX0JJTkQiLCJGdW5jdGlvblByb3RvdHlwZSIsIkZ1bmN0aW9uIiwiYXBwbHkiLCJjYWxsIiwiUmVmbGVjdCIsImJpbmQiLCJ0ZXN0IiwiaGFzT3duUHJvcGVydHkiLCJnZXREZXNjcmlwdG9yIiwiUFJPUEVSIiwiQ09ORklHVVJBQkxFIiwidW5jdXJyeVRoaXNXaXRoQmluZCIsImZuIiwibmFtZXNwYWNlIiwibWV0aG9kIiwiYUNhbGxhYmxlIiwiaXNOdWxsT3JVbmRlZmluZWQiLCJWIiwiUCIsImZ1bmMiLCJjaGVjayIsIk1hdGgiLCJnbG9iYWxUaGlzIiwid2luZG93Iiwic2VsZiIsImciLCJ0aGlzIiwidG9PYmplY3QiLCJhIiwiY2xhc3NvZiIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwic3RvcmUiLCJmdW5jdGlvblRvU3RyaW5nIiwiaW5zcGVjdFNvdXJjZSIsInNldCIsImhhcyIsIk5BVElWRV9XRUFLX01BUCIsInNoYXJlZCIsInNoYXJlZEtleSIsImhpZGRlbktleXMiLCJPQkpFQ1RfQUxSRUFEWV9JTklUSUFMSVpFRCIsIldlYWtNYXAiLCJzdGF0ZSIsIm1ldGFkYXRhIiwiZmFjYWRlIiwiU1RBVEUiLCJlbmZvcmNlIiwiZ2V0dGVyRm9yIiwiVFlQRSIsInR5cGUiLCJkb2N1bWVudEFsbCIsImFsbCIsInJlcGxhY2VtZW50IiwiZmVhdHVyZSIsImRldGVjdGlvbiIsImRhdGEiLCJub3JtYWxpemUiLCJQT0xZRklMTCIsIk5BVElWRSIsInN0cmluZyIsInJlcGxhY2UiLCJ0b0xvd2VyQ2FzZSIsImdldEJ1aWx0SW4iLCJpc1Byb3RvdHlwZU9mIiwiVVNFX1NZTUJPTF9BU19VSUQiLCIkU3ltYm9sIiwidG9MZW5ndGgiLCJvYmoiLCJDT05GSUdVUkFCTEVfRlVOQ1RJT05fTkFNRSIsIkludGVybmFsU3RhdGVNb2R1bGUiLCJlbmZvcmNlSW50ZXJuYWxTdGF0ZSIsImdldEludGVybmFsU3RhdGUiLCJqb2luIiwiQ09ORklHVVJBQkxFX0xFTkdUSCIsIlRFTVBMQVRFIiwiZ2V0dGVyIiwic2V0dGVyIiwiYXJpdHkiLCJjb25zdHJ1Y3RvciIsImNlaWwiLCJmbG9vciIsInRydW5jIiwieCIsIm4iLCJJRThfRE9NX0RFRklORSIsIlY4X1BST1RPVFlQRV9ERUZJTkVfQlVHIiwiYW5PYmplY3QiLCJ0b1Byb3BlcnR5S2V5IiwiJGRlZmluZVByb3BlcnR5IiwiJGdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIkVOVU1FUkFCTEUiLCJXUklUQUJMRSIsIkF0dHJpYnV0ZXMiLCJjdXJyZW50IiwicHJvcGVydHlJc0VudW1lcmFibGVNb2R1bGUiLCJpbnRlcm5hbE9iamVjdEtleXMiLCJjb25jYXQiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwicHVzaCIsIm5hbWVzIiwiJHByb3BlcnR5SXNFbnVtZXJhYmxlIiwiTkFTSE9STl9CVUciLCJpbnB1dCIsInByZWYiLCJ2YWwiLCJ2YWx1ZU9mIiwiZ2V0T3duUHJvcGVydHlOYW1lc01vZHVsZSIsImdldE93blByb3BlcnR5U3ltYm9sc01vZHVsZSIsInRoYXQiLCJoYXNJbmRpY2VzIiwiaWdub3JlQ2FzZSIsIm11bHRpbGluZSIsImRvdEFsbCIsInVuaWNvZGUiLCJ1bmljb2RlU2V0cyIsInN0aWNreSIsInJlZ0V4cEZsYWdzIiwiUmVnRXhwUHJvdG90eXBlIiwiUmVnRXhwIiwiUiIsImZsYWdzIiwiRU5HSU5FX0lTX0JVTiIsIlVTRVJfQUdFTlQiLCJhcnJheVNsaWNlIiwidmFsaWRhdGVBcmd1bWVudHNMZW5ndGgiLCJXUkFQIiwic2NoZWR1bGVyIiwiaGFzVGltZUFyZyIsImZpcnN0UGFyYW1JbmRleCIsImhhbmRsZXIiLCJ0aW1lb3V0IiwiYm91bmRBcmdzIiwicGFyYW1zIiwiY2FsbGJhY2siLCJ1aWQiLCJTSEFSRUQiLCJJU19QVVJFIiwibW9kZSIsImNvcHlyaWdodCIsImxpY2Vuc2UiLCJWOF9WRVJTSU9OIiwic3ltYm9sIiwiU3ltYm9sIiwidG9JbnRlZ2VyT3JJbmZpbml0eSIsIm1heCIsIm1pbiIsImludGVnZXIiLCJJbmRleGVkT2JqZWN0IiwicmVxdWlyZU9iamVjdENvZXJjaWJsZSIsIm51bWJlciIsImxlbiIsImlzU3ltYm9sIiwiZ2V0TWV0aG9kIiwib3JkaW5hcnlUb1ByaW1pdGl2ZSIsIlRPX1BSSU1JVElWRSIsImV4b3RpY1RvUHJpbSIsInRvUHJpbWl0aXZlIiwiaWQiLCJwb3N0Zml4IiwicmFuZG9tIiwiTkFUSVZFX1NZTUJPTCIsIml0ZXJhdG9yIiwicGFzc2VkIiwicmVxdWlyZWQiLCJXZWxsS25vd25TeW1ib2xzU3RvcmUiLCJjcmVhdGVXZWxsS25vd25TeW1ib2wiLCJ3aXRob3V0U2V0dGVyIiwiRGF0ZVByb3RvdHlwZSIsIkRhdGUiLCJJTlZBTElEX0RBVEUiLCJUT19TVFJJTkciLCJuYXRpdmVEYXRlVG9TdHJpbmciLCJ0aGlzVGltZVZhbHVlIiwiZ2V0VGltZSIsIk5hTiIsIlBST1BFUl9GVU5DVElPTl9OQU1FIiwiJHRvU3RyaW5nIiwiZ2V0UmVnRXhwRmxhZ3MiLCJuYXRpdmVUb1N0cmluZyIsIk5PVF9HRU5FUklDIiwiSU5DT1JSRUNUX05BTUUiLCIkIiwic2V0SW50ZXJ2YWwiLCJzY2hlZHVsZXJzRml4Iiwic2V0VGltZW91dCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJlIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsIkVycm9yIiwicCIsImN1cnJIb2xlR29ibGluIiwibnVtIiwiZ2V0UmFuZG9tSG9sZSIsInByZXZOdW0iLCJjZWxsIiwic2V0R29ibGluIiwiaW5uZXJIVE1MIiwiZ29ibGluIiwiaW1nR29ibGluIiwiZ2V0RWxlbWVudEJ5SWQiLCJhcHBlbmRDaGlsZCIsIm9ubG9hZCIsImhvbGUiLCJzZXRHYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==